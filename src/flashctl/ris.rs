# [doc = "Register `RIS` reader"] pub type R = crate :: R < RIS_SPEC > ; # [doc = "Field `RIS_DONE` reader - NoWrapper operation completed. This interrupt bit is set by firmware or the corresponding bit in the ISET register. It is cleared by the corresponding bit in in the ICLR register or reading the IIDX register when this interrupt is the highest priority."] pub type RIS_DONE_R = crate :: BitReader < RIS_DONE_A > ; # [doc = "NoWrapper operation completed. This interrupt bit is set by firmware or the corresponding bit in the ISET register. It is cleared by the corresponding bit in in the ICLR register or reading the IIDX register when this interrupt is the highest priority.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum RIS_DONE_A { # [doc = "0: CLR"] RIS_DONE_CLR = 0 , # [doc = "1: SET"] RIS_DONE_SET = 1 , } impl From < RIS_DONE_A > for bool { # [inline (always)] fn from (variant : RIS_DONE_A) -> Self { variant as u8 != 0 } } impl RIS_DONE_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> RIS_DONE_A { match self . bits { false => RIS_DONE_A :: RIS_DONE_CLR , true => RIS_DONE_A :: RIS_DONE_SET , } } # [doc = "CLR"] # [inline (always)] pub fn is_ris_done_clr (& self) -> bool { * self == RIS_DONE_A :: RIS_DONE_CLR } # [doc = "SET"] # [inline (always)] pub fn is_ris_done_set (& self) -> bool { * self == RIS_DONE_A :: RIS_DONE_SET } } impl R { # [doc = "Bit 0 - NoWrapper operation completed. This interrupt bit is set by firmware or the corresponding bit in the ISET register. It is cleared by the corresponding bit in in the ICLR register or reading the IIDX register when this interrupt is the highest priority."] # [inline (always)] pub fn ris_done (& self) -> RIS_DONE_R { RIS_DONE_R :: new ((self . bits & 1) != 0) } } # [doc = "Raw Interrupt Status Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`ris::R`](R).  See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct RIS_SPEC ; impl crate :: RegisterSpec for RIS_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [`ris::R`](R) reader structure"] impl crate :: Readable for RIS_SPEC { } # [doc = "`reset()` method sets RIS to value 0"] impl crate :: Resettable for RIS_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }