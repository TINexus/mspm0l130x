# [doc = "Register `GBLINFO0` reader"] pub type R = crate :: R < GBLINFO0_SPEC > ; # [doc = "Field `GBLINFO0_SECTORSIZE` reader - Sector size in bytes"] pub type GBLINFO0_SECTORSIZE_R = crate :: FieldReader < GBLINFO0_SECTORSIZE_A > ; # [doc = "Sector size in bytes\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u16)] pub enum GBLINFO0_SECTORSIZE_A { # [doc = "1024: ONEKB"] GBLINFO0_SECTORSIZE_ONEKB = 1024 , # [doc = "2048: TWOKB"] GBLINFO0_SECTORSIZE_TWOKB = 2048 , } impl From < GBLINFO0_SECTORSIZE_A > for u16 { # [inline (always)] fn from (variant : GBLINFO0_SECTORSIZE_A) -> Self { variant as _ } } impl crate :: FieldSpec for GBLINFO0_SECTORSIZE_A { type Ux = u16 ; } impl GBLINFO0_SECTORSIZE_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> Option < GBLINFO0_SECTORSIZE_A > { match self . bits { 1024 => Some (GBLINFO0_SECTORSIZE_A :: GBLINFO0_SECTORSIZE_ONEKB) , 2048 => Some (GBLINFO0_SECTORSIZE_A :: GBLINFO0_SECTORSIZE_TWOKB) , _ => None , } } # [doc = "ONEKB"] # [inline (always)] pub fn is_gblinfo0_sectorsize_onekb (& self) -> bool { * self == GBLINFO0_SECTORSIZE_A :: GBLINFO0_SECTORSIZE_ONEKB } # [doc = "TWOKB"] # [inline (always)] pub fn is_gblinfo0_sectorsize_twokb (& self) -> bool { * self == GBLINFO0_SECTORSIZE_A :: GBLINFO0_SECTORSIZE_TWOKB } } # [doc = "Field `GBLINFO0_NUMBANKS` reader - Number of banks instantiated Minimum: 1 Maximum: 5"] pub type GBLINFO0_NUMBANKS_R = crate :: FieldReader ; impl R { # [doc = "Bits 0:15 - Sector size in bytes"] # [inline (always)] pub fn gblinfo0_sectorsize (& self) -> GBLINFO0_SECTORSIZE_R { GBLINFO0_SECTORSIZE_R :: new ((self . bits & 0xffff) as u16) } # [doc = "Bits 16:18 - Number of banks instantiated Minimum: 1 Maximum: 5"] # [inline (always)] pub fn gblinfo0_numbanks (& self) -> GBLINFO0_NUMBANKS_R { GBLINFO0_NUMBANKS_R :: new (((self . bits >> 16) & 7) as u8) } } # [doc = "Global Information Register 0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`gblinfo0::R`](R).  See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct GBLINFO0_SPEC ; impl crate :: RegisterSpec for GBLINFO0_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [`gblinfo0::R`](R) reader structure"] impl crate :: Readable for GBLINFO0_SPEC { } # [doc = "`reset()` method sets GBLINFO0 to value 0"] impl crate :: Resettable for GBLINFO0_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }