# [doc = "Register `ICLR` writer"] pub type W = crate :: W < ICLR_SPEC > ; # [doc = "0: No effect 1: Clear the DONE interrupt in the RIS register\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum ICLR_DONE_AW { # [doc = "0: NO_EFFECT"] ICLR_DONE_NO_EFFECT = 0 , # [doc = "1: CLR"] ICLR_DONE_CLR = 1 , } impl From < ICLR_DONE_AW > for bool { # [inline (always)] fn from (variant : ICLR_DONE_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `ICLR_DONE` writer - 0: No effect 1: Clear the DONE interrupt in the RIS register"] pub type ICLR_DONE_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , ICLR_DONE_AW > ; impl < 'a , REG , const O : u8 > ICLR_DONE_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn iclr_done_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (ICLR_DONE_AW :: ICLR_DONE_NO_EFFECT) } # [doc = "CLR"] # [inline (always)] pub fn iclr_done_clr (self) -> & 'a mut crate :: W < REG > { self . variant (ICLR_DONE_AW :: ICLR_DONE_CLR) } } impl W { # [doc = "Bit 0 - 0: No effect 1: Clear the DONE interrupt in the RIS register"] # [inline (always)] # [must_use] pub fn iclr_done (& mut self) -> ICLR_DONE_W < ICLR_SPEC , 0 > { ICLR_DONE_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "Interrupt Clear Register\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`iclr::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct ICLR_SPEC ; impl crate :: RegisterSpec for ICLR_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`iclr::W`](W) writer structure"] impl crate :: Writable for ICLR_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets ICLR to value 0"] impl crate :: Resettable for ICLR_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }