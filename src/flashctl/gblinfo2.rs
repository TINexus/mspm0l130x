# [doc = "Register `GBLINFO2` reader"] pub type R = crate :: R < GBLINFO2_SPEC > ; # [doc = "Field `GBLINFO2_DATAREGISTERS` reader - Number of data registers present."] pub type GBLINFO2_DATAREGISTERS_R = crate :: FieldReader ; impl R { # [doc = "Bits 0:3 - Number of data registers present."] # [inline (always)] pub fn gblinfo2_dataregisters (& self) -> GBLINFO2_DATAREGISTERS_R { GBLINFO2_DATAREGISTERS_R :: new ((self . bits & 0x0f) as u8) } } # [doc = "Global Information Register 2\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`gblinfo2::R`](R).  See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct GBLINFO2_SPEC ; impl crate :: RegisterSpec for GBLINFO2_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [`gblinfo2::R`](R) reader structure"] impl crate :: Readable for GBLINFO2_SPEC { } # [doc = "`reset()` method sets GBLINFO2 to value 0"] impl crate :: Resettable for GBLINFO2_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }