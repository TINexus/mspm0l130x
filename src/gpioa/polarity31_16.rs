# [doc = "Register `POLARITY31_16` reader"] pub type R = crate :: R < POLARITY31_16_SPEC > ; # [doc = "Register `POLARITY31_16` writer"] pub type W = crate :: W < POLARITY31_16_SPEC > ; # [doc = "Field `POLARITY31_16_DIO16` reader - Enables and configures edge detection polarity for DIO16."] pub type POLARITY31_16_DIO16_R = crate :: FieldReader < POLARITY31_16_DIO16_A > ; # [doc = "Enables and configures edge detection polarity for DIO16.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO16_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO16_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO16_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO16_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO16_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO16_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO16_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO16_A { type Ux = u8 ; } impl POLARITY31_16_DIO16_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO16_A { match self . bits { 0 => POLARITY31_16_DIO16_A :: POLARITY31_16_DIO16_DISABLE , 1 => POLARITY31_16_DIO16_A :: POLARITY31_16_DIO16_RISE , 2 => POLARITY31_16_DIO16_A :: POLARITY31_16_DIO16_FALL , 3 => POLARITY31_16_DIO16_A :: POLARITY31_16_DIO16_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio16_disable (& self) -> bool { * self == POLARITY31_16_DIO16_A :: POLARITY31_16_DIO16_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio16_rise (& self) -> bool { * self == POLARITY31_16_DIO16_A :: POLARITY31_16_DIO16_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio16_fall (& self) -> bool { * self == POLARITY31_16_DIO16_A :: POLARITY31_16_DIO16_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio16_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO16_A :: POLARITY31_16_DIO16_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO16` writer - Enables and configures edge detection polarity for DIO16."] pub type POLARITY31_16_DIO16_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO16_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO16_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio16_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO16_A :: POLARITY31_16_DIO16_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio16_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO16_A :: POLARITY31_16_DIO16_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio16_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO16_A :: POLARITY31_16_DIO16_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio16_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO16_A :: POLARITY31_16_DIO16_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO17` reader - Enables and configures edge detection polarity for DIO17."] pub type POLARITY31_16_DIO17_R = crate :: FieldReader < POLARITY31_16_DIO17_A > ; # [doc = "Enables and configures edge detection polarity for DIO17.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO17_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO17_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO17_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO17_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO17_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO17_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO17_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO17_A { type Ux = u8 ; } impl POLARITY31_16_DIO17_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO17_A { match self . bits { 0 => POLARITY31_16_DIO17_A :: POLARITY31_16_DIO17_DISABLE , 1 => POLARITY31_16_DIO17_A :: POLARITY31_16_DIO17_RISE , 2 => POLARITY31_16_DIO17_A :: POLARITY31_16_DIO17_FALL , 3 => POLARITY31_16_DIO17_A :: POLARITY31_16_DIO17_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio17_disable (& self) -> bool { * self == POLARITY31_16_DIO17_A :: POLARITY31_16_DIO17_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio17_rise (& self) -> bool { * self == POLARITY31_16_DIO17_A :: POLARITY31_16_DIO17_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio17_fall (& self) -> bool { * self == POLARITY31_16_DIO17_A :: POLARITY31_16_DIO17_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio17_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO17_A :: POLARITY31_16_DIO17_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO17` writer - Enables and configures edge detection polarity for DIO17."] pub type POLARITY31_16_DIO17_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO17_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO17_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio17_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO17_A :: POLARITY31_16_DIO17_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio17_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO17_A :: POLARITY31_16_DIO17_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio17_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO17_A :: POLARITY31_16_DIO17_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio17_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO17_A :: POLARITY31_16_DIO17_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO18` reader - Enables and configures edge detection polarity for DIO18."] pub type POLARITY31_16_DIO18_R = crate :: FieldReader < POLARITY31_16_DIO18_A > ; # [doc = "Enables and configures edge detection polarity for DIO18.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO18_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO18_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO18_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO18_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO18_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO18_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO18_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO18_A { type Ux = u8 ; } impl POLARITY31_16_DIO18_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO18_A { match self . bits { 0 => POLARITY31_16_DIO18_A :: POLARITY31_16_DIO18_DISABLE , 1 => POLARITY31_16_DIO18_A :: POLARITY31_16_DIO18_RISE , 2 => POLARITY31_16_DIO18_A :: POLARITY31_16_DIO18_FALL , 3 => POLARITY31_16_DIO18_A :: POLARITY31_16_DIO18_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio18_disable (& self) -> bool { * self == POLARITY31_16_DIO18_A :: POLARITY31_16_DIO18_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio18_rise (& self) -> bool { * self == POLARITY31_16_DIO18_A :: POLARITY31_16_DIO18_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio18_fall (& self) -> bool { * self == POLARITY31_16_DIO18_A :: POLARITY31_16_DIO18_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio18_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO18_A :: POLARITY31_16_DIO18_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO18` writer - Enables and configures edge detection polarity for DIO18."] pub type POLARITY31_16_DIO18_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO18_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO18_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio18_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO18_A :: POLARITY31_16_DIO18_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio18_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO18_A :: POLARITY31_16_DIO18_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio18_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO18_A :: POLARITY31_16_DIO18_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio18_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO18_A :: POLARITY31_16_DIO18_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO19` reader - Enables and configures edge detection polarity for DIO19."] pub type POLARITY31_16_DIO19_R = crate :: FieldReader < POLARITY31_16_DIO19_A > ; # [doc = "Enables and configures edge detection polarity for DIO19.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO19_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO19_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO19_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO19_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO19_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO19_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO19_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO19_A { type Ux = u8 ; } impl POLARITY31_16_DIO19_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO19_A { match self . bits { 0 => POLARITY31_16_DIO19_A :: POLARITY31_16_DIO19_DISABLE , 1 => POLARITY31_16_DIO19_A :: POLARITY31_16_DIO19_RISE , 2 => POLARITY31_16_DIO19_A :: POLARITY31_16_DIO19_FALL , 3 => POLARITY31_16_DIO19_A :: POLARITY31_16_DIO19_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio19_disable (& self) -> bool { * self == POLARITY31_16_DIO19_A :: POLARITY31_16_DIO19_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio19_rise (& self) -> bool { * self == POLARITY31_16_DIO19_A :: POLARITY31_16_DIO19_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio19_fall (& self) -> bool { * self == POLARITY31_16_DIO19_A :: POLARITY31_16_DIO19_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio19_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO19_A :: POLARITY31_16_DIO19_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO19` writer - Enables and configures edge detection polarity for DIO19."] pub type POLARITY31_16_DIO19_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO19_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO19_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio19_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO19_A :: POLARITY31_16_DIO19_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio19_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO19_A :: POLARITY31_16_DIO19_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio19_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO19_A :: POLARITY31_16_DIO19_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio19_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO19_A :: POLARITY31_16_DIO19_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO20` reader - Enables and configures edge detection polarity for DIO20."] pub type POLARITY31_16_DIO20_R = crate :: FieldReader < POLARITY31_16_DIO20_A > ; # [doc = "Enables and configures edge detection polarity for DIO20.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO20_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO20_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO20_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO20_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO20_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO20_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO20_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO20_A { type Ux = u8 ; } impl POLARITY31_16_DIO20_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO20_A { match self . bits { 0 => POLARITY31_16_DIO20_A :: POLARITY31_16_DIO20_DISABLE , 1 => POLARITY31_16_DIO20_A :: POLARITY31_16_DIO20_RISE , 2 => POLARITY31_16_DIO20_A :: POLARITY31_16_DIO20_FALL , 3 => POLARITY31_16_DIO20_A :: POLARITY31_16_DIO20_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio20_disable (& self) -> bool { * self == POLARITY31_16_DIO20_A :: POLARITY31_16_DIO20_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio20_rise (& self) -> bool { * self == POLARITY31_16_DIO20_A :: POLARITY31_16_DIO20_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio20_fall (& self) -> bool { * self == POLARITY31_16_DIO20_A :: POLARITY31_16_DIO20_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio20_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO20_A :: POLARITY31_16_DIO20_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO20` writer - Enables and configures edge detection polarity for DIO20."] pub type POLARITY31_16_DIO20_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO20_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO20_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio20_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO20_A :: POLARITY31_16_DIO20_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio20_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO20_A :: POLARITY31_16_DIO20_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio20_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO20_A :: POLARITY31_16_DIO20_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio20_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO20_A :: POLARITY31_16_DIO20_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO21` reader - Enables and configures edge detection polarity for DIO21."] pub type POLARITY31_16_DIO21_R = crate :: FieldReader < POLARITY31_16_DIO21_A > ; # [doc = "Enables and configures edge detection polarity for DIO21.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO21_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO21_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO21_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO21_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO21_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO21_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO21_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO21_A { type Ux = u8 ; } impl POLARITY31_16_DIO21_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO21_A { match self . bits { 0 => POLARITY31_16_DIO21_A :: POLARITY31_16_DIO21_DISABLE , 1 => POLARITY31_16_DIO21_A :: POLARITY31_16_DIO21_RISE , 2 => POLARITY31_16_DIO21_A :: POLARITY31_16_DIO21_FALL , 3 => POLARITY31_16_DIO21_A :: POLARITY31_16_DIO21_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio21_disable (& self) -> bool { * self == POLARITY31_16_DIO21_A :: POLARITY31_16_DIO21_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio21_rise (& self) -> bool { * self == POLARITY31_16_DIO21_A :: POLARITY31_16_DIO21_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio21_fall (& self) -> bool { * self == POLARITY31_16_DIO21_A :: POLARITY31_16_DIO21_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio21_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO21_A :: POLARITY31_16_DIO21_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO21` writer - Enables and configures edge detection polarity for DIO21."] pub type POLARITY31_16_DIO21_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO21_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO21_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio21_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO21_A :: POLARITY31_16_DIO21_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio21_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO21_A :: POLARITY31_16_DIO21_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio21_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO21_A :: POLARITY31_16_DIO21_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio21_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO21_A :: POLARITY31_16_DIO21_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO22` reader - Enables and configures edge detection polarity for DIO22."] pub type POLARITY31_16_DIO22_R = crate :: FieldReader < POLARITY31_16_DIO22_A > ; # [doc = "Enables and configures edge detection polarity for DIO22.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO22_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO22_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO22_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO22_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO22_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO22_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO22_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO22_A { type Ux = u8 ; } impl POLARITY31_16_DIO22_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO22_A { match self . bits { 0 => POLARITY31_16_DIO22_A :: POLARITY31_16_DIO22_DISABLE , 1 => POLARITY31_16_DIO22_A :: POLARITY31_16_DIO22_RISE , 2 => POLARITY31_16_DIO22_A :: POLARITY31_16_DIO22_FALL , 3 => POLARITY31_16_DIO22_A :: POLARITY31_16_DIO22_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio22_disable (& self) -> bool { * self == POLARITY31_16_DIO22_A :: POLARITY31_16_DIO22_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio22_rise (& self) -> bool { * self == POLARITY31_16_DIO22_A :: POLARITY31_16_DIO22_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio22_fall (& self) -> bool { * self == POLARITY31_16_DIO22_A :: POLARITY31_16_DIO22_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio22_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO22_A :: POLARITY31_16_DIO22_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO22` writer - Enables and configures edge detection polarity for DIO22."] pub type POLARITY31_16_DIO22_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO22_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO22_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio22_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO22_A :: POLARITY31_16_DIO22_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio22_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO22_A :: POLARITY31_16_DIO22_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio22_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO22_A :: POLARITY31_16_DIO22_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio22_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO22_A :: POLARITY31_16_DIO22_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO23` reader - Enables and configures edge detection polarity for DIO23."] pub type POLARITY31_16_DIO23_R = crate :: FieldReader < POLARITY31_16_DIO23_A > ; # [doc = "Enables and configures edge detection polarity for DIO23.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO23_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO23_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO23_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO23_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO23_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO23_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO23_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO23_A { type Ux = u8 ; } impl POLARITY31_16_DIO23_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO23_A { match self . bits { 0 => POLARITY31_16_DIO23_A :: POLARITY31_16_DIO23_DISABLE , 1 => POLARITY31_16_DIO23_A :: POLARITY31_16_DIO23_RISE , 2 => POLARITY31_16_DIO23_A :: POLARITY31_16_DIO23_FALL , 3 => POLARITY31_16_DIO23_A :: POLARITY31_16_DIO23_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio23_disable (& self) -> bool { * self == POLARITY31_16_DIO23_A :: POLARITY31_16_DIO23_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio23_rise (& self) -> bool { * self == POLARITY31_16_DIO23_A :: POLARITY31_16_DIO23_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio23_fall (& self) -> bool { * self == POLARITY31_16_DIO23_A :: POLARITY31_16_DIO23_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio23_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO23_A :: POLARITY31_16_DIO23_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO23` writer - Enables and configures edge detection polarity for DIO23."] pub type POLARITY31_16_DIO23_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO23_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO23_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio23_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO23_A :: POLARITY31_16_DIO23_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio23_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO23_A :: POLARITY31_16_DIO23_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio23_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO23_A :: POLARITY31_16_DIO23_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio23_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO23_A :: POLARITY31_16_DIO23_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO24` reader - Enables and configures edge detection polarity for DIO24."] pub type POLARITY31_16_DIO24_R = crate :: FieldReader < POLARITY31_16_DIO24_A > ; # [doc = "Enables and configures edge detection polarity for DIO24.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO24_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO24_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO24_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO24_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO24_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO24_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO24_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO24_A { type Ux = u8 ; } impl POLARITY31_16_DIO24_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO24_A { match self . bits { 0 => POLARITY31_16_DIO24_A :: POLARITY31_16_DIO24_DISABLE , 1 => POLARITY31_16_DIO24_A :: POLARITY31_16_DIO24_RISE , 2 => POLARITY31_16_DIO24_A :: POLARITY31_16_DIO24_FALL , 3 => POLARITY31_16_DIO24_A :: POLARITY31_16_DIO24_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio24_disable (& self) -> bool { * self == POLARITY31_16_DIO24_A :: POLARITY31_16_DIO24_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio24_rise (& self) -> bool { * self == POLARITY31_16_DIO24_A :: POLARITY31_16_DIO24_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio24_fall (& self) -> bool { * self == POLARITY31_16_DIO24_A :: POLARITY31_16_DIO24_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio24_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO24_A :: POLARITY31_16_DIO24_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO24` writer - Enables and configures edge detection polarity for DIO24."] pub type POLARITY31_16_DIO24_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO24_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO24_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio24_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO24_A :: POLARITY31_16_DIO24_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio24_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO24_A :: POLARITY31_16_DIO24_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio24_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO24_A :: POLARITY31_16_DIO24_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio24_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO24_A :: POLARITY31_16_DIO24_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO25` reader - Enables and configures edge detection polarity for DIO25."] pub type POLARITY31_16_DIO25_R = crate :: FieldReader < POLARITY31_16_DIO25_A > ; # [doc = "Enables and configures edge detection polarity for DIO25.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO25_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO25_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO25_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO25_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO25_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO25_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO25_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO25_A { type Ux = u8 ; } impl POLARITY31_16_DIO25_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO25_A { match self . bits { 0 => POLARITY31_16_DIO25_A :: POLARITY31_16_DIO25_DISABLE , 1 => POLARITY31_16_DIO25_A :: POLARITY31_16_DIO25_RISE , 2 => POLARITY31_16_DIO25_A :: POLARITY31_16_DIO25_FALL , 3 => POLARITY31_16_DIO25_A :: POLARITY31_16_DIO25_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio25_disable (& self) -> bool { * self == POLARITY31_16_DIO25_A :: POLARITY31_16_DIO25_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio25_rise (& self) -> bool { * self == POLARITY31_16_DIO25_A :: POLARITY31_16_DIO25_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio25_fall (& self) -> bool { * self == POLARITY31_16_DIO25_A :: POLARITY31_16_DIO25_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio25_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO25_A :: POLARITY31_16_DIO25_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO25` writer - Enables and configures edge detection polarity for DIO25."] pub type POLARITY31_16_DIO25_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO25_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO25_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio25_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO25_A :: POLARITY31_16_DIO25_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio25_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO25_A :: POLARITY31_16_DIO25_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio25_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO25_A :: POLARITY31_16_DIO25_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio25_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO25_A :: POLARITY31_16_DIO25_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO26` reader - Enables and configures edge detection polarity for DIO26."] pub type POLARITY31_16_DIO26_R = crate :: FieldReader < POLARITY31_16_DIO26_A > ; # [doc = "Enables and configures edge detection polarity for DIO26.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO26_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO26_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO26_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO26_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO26_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO26_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO26_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO26_A { type Ux = u8 ; } impl POLARITY31_16_DIO26_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO26_A { match self . bits { 0 => POLARITY31_16_DIO26_A :: POLARITY31_16_DIO26_DISABLE , 1 => POLARITY31_16_DIO26_A :: POLARITY31_16_DIO26_RISE , 2 => POLARITY31_16_DIO26_A :: POLARITY31_16_DIO26_FALL , 3 => POLARITY31_16_DIO26_A :: POLARITY31_16_DIO26_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio26_disable (& self) -> bool { * self == POLARITY31_16_DIO26_A :: POLARITY31_16_DIO26_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio26_rise (& self) -> bool { * self == POLARITY31_16_DIO26_A :: POLARITY31_16_DIO26_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio26_fall (& self) -> bool { * self == POLARITY31_16_DIO26_A :: POLARITY31_16_DIO26_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio26_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO26_A :: POLARITY31_16_DIO26_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO26` writer - Enables and configures edge detection polarity for DIO26."] pub type POLARITY31_16_DIO26_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO26_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO26_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio26_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO26_A :: POLARITY31_16_DIO26_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio26_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO26_A :: POLARITY31_16_DIO26_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio26_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO26_A :: POLARITY31_16_DIO26_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio26_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO26_A :: POLARITY31_16_DIO26_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO27` reader - Enables and configures edge detection polarity for DIO27."] pub type POLARITY31_16_DIO27_R = crate :: FieldReader < POLARITY31_16_DIO27_A > ; # [doc = "Enables and configures edge detection polarity for DIO27.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO27_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO27_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO27_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO27_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO27_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO27_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO27_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO27_A { type Ux = u8 ; } impl POLARITY31_16_DIO27_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO27_A { match self . bits { 0 => POLARITY31_16_DIO27_A :: POLARITY31_16_DIO27_DISABLE , 1 => POLARITY31_16_DIO27_A :: POLARITY31_16_DIO27_RISE , 2 => POLARITY31_16_DIO27_A :: POLARITY31_16_DIO27_FALL , 3 => POLARITY31_16_DIO27_A :: POLARITY31_16_DIO27_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio27_disable (& self) -> bool { * self == POLARITY31_16_DIO27_A :: POLARITY31_16_DIO27_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio27_rise (& self) -> bool { * self == POLARITY31_16_DIO27_A :: POLARITY31_16_DIO27_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio27_fall (& self) -> bool { * self == POLARITY31_16_DIO27_A :: POLARITY31_16_DIO27_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio27_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO27_A :: POLARITY31_16_DIO27_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO27` writer - Enables and configures edge detection polarity for DIO27."] pub type POLARITY31_16_DIO27_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO27_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO27_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio27_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO27_A :: POLARITY31_16_DIO27_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio27_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO27_A :: POLARITY31_16_DIO27_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio27_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO27_A :: POLARITY31_16_DIO27_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio27_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO27_A :: POLARITY31_16_DIO27_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO28` reader - Enables and configures edge detection polarity for DIO28."] pub type POLARITY31_16_DIO28_R = crate :: FieldReader < POLARITY31_16_DIO28_A > ; # [doc = "Enables and configures edge detection polarity for DIO28.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO28_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO28_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO28_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO28_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO28_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO28_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO28_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO28_A { type Ux = u8 ; } impl POLARITY31_16_DIO28_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO28_A { match self . bits { 0 => POLARITY31_16_DIO28_A :: POLARITY31_16_DIO28_DISABLE , 1 => POLARITY31_16_DIO28_A :: POLARITY31_16_DIO28_RISE , 2 => POLARITY31_16_DIO28_A :: POLARITY31_16_DIO28_FALL , 3 => POLARITY31_16_DIO28_A :: POLARITY31_16_DIO28_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio28_disable (& self) -> bool { * self == POLARITY31_16_DIO28_A :: POLARITY31_16_DIO28_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio28_rise (& self) -> bool { * self == POLARITY31_16_DIO28_A :: POLARITY31_16_DIO28_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio28_fall (& self) -> bool { * self == POLARITY31_16_DIO28_A :: POLARITY31_16_DIO28_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio28_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO28_A :: POLARITY31_16_DIO28_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO28` writer - Enables and configures edge detection polarity for DIO28."] pub type POLARITY31_16_DIO28_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO28_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO28_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio28_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO28_A :: POLARITY31_16_DIO28_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio28_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO28_A :: POLARITY31_16_DIO28_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio28_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO28_A :: POLARITY31_16_DIO28_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio28_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO28_A :: POLARITY31_16_DIO28_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO29` reader - Enables and configures edge detection polarity for DIO29."] pub type POLARITY31_16_DIO29_R = crate :: FieldReader < POLARITY31_16_DIO29_A > ; # [doc = "Enables and configures edge detection polarity for DIO29.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO29_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO29_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO29_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO29_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO29_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO29_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO29_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO29_A { type Ux = u8 ; } impl POLARITY31_16_DIO29_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO29_A { match self . bits { 0 => POLARITY31_16_DIO29_A :: POLARITY31_16_DIO29_DISABLE , 1 => POLARITY31_16_DIO29_A :: POLARITY31_16_DIO29_RISE , 2 => POLARITY31_16_DIO29_A :: POLARITY31_16_DIO29_FALL , 3 => POLARITY31_16_DIO29_A :: POLARITY31_16_DIO29_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio29_disable (& self) -> bool { * self == POLARITY31_16_DIO29_A :: POLARITY31_16_DIO29_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio29_rise (& self) -> bool { * self == POLARITY31_16_DIO29_A :: POLARITY31_16_DIO29_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio29_fall (& self) -> bool { * self == POLARITY31_16_DIO29_A :: POLARITY31_16_DIO29_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio29_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO29_A :: POLARITY31_16_DIO29_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO29` writer - Enables and configures edge detection polarity for DIO29."] pub type POLARITY31_16_DIO29_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO29_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO29_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio29_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO29_A :: POLARITY31_16_DIO29_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio29_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO29_A :: POLARITY31_16_DIO29_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio29_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO29_A :: POLARITY31_16_DIO29_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio29_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO29_A :: POLARITY31_16_DIO29_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO30` reader - Enables and configures edge detection polarity for DIO30."] pub type POLARITY31_16_DIO30_R = crate :: FieldReader < POLARITY31_16_DIO30_A > ; # [doc = "Enables and configures edge detection polarity for DIO30.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO30_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO30_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO30_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO30_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO30_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO30_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO30_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO30_A { type Ux = u8 ; } impl POLARITY31_16_DIO30_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO30_A { match self . bits { 0 => POLARITY31_16_DIO30_A :: POLARITY31_16_DIO30_DISABLE , 1 => POLARITY31_16_DIO30_A :: POLARITY31_16_DIO30_RISE , 2 => POLARITY31_16_DIO30_A :: POLARITY31_16_DIO30_FALL , 3 => POLARITY31_16_DIO30_A :: POLARITY31_16_DIO30_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio30_disable (& self) -> bool { * self == POLARITY31_16_DIO30_A :: POLARITY31_16_DIO30_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio30_rise (& self) -> bool { * self == POLARITY31_16_DIO30_A :: POLARITY31_16_DIO30_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio30_fall (& self) -> bool { * self == POLARITY31_16_DIO30_A :: POLARITY31_16_DIO30_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio30_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO30_A :: POLARITY31_16_DIO30_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO30` writer - Enables and configures edge detection polarity for DIO30."] pub type POLARITY31_16_DIO30_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO30_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO30_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio30_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO30_A :: POLARITY31_16_DIO30_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio30_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO30_A :: POLARITY31_16_DIO30_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio30_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO30_A :: POLARITY31_16_DIO30_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio30_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO30_A :: POLARITY31_16_DIO30_RISE_FALL) } } # [doc = "Field `POLARITY31_16_DIO31` reader - Enables and configures edge detection polarity for DIO31."] pub type POLARITY31_16_DIO31_R = crate :: FieldReader < POLARITY31_16_DIO31_A > ; # [doc = "Enables and configures edge detection polarity for DIO31.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum POLARITY31_16_DIO31_A { # [doc = "0: DISABLE"] POLARITY31_16_DIO31_DISABLE = 0 , # [doc = "1: RISE"] POLARITY31_16_DIO31_RISE = 1 , # [doc = "2: FALL"] POLARITY31_16_DIO31_FALL = 2 , # [doc = "3: RISE_FALL"] POLARITY31_16_DIO31_RISE_FALL = 3 , } impl From < POLARITY31_16_DIO31_A > for u8 { # [inline (always)] fn from (variant : POLARITY31_16_DIO31_A) -> Self { variant as _ } } impl crate :: FieldSpec for POLARITY31_16_DIO31_A { type Ux = u8 ; } impl POLARITY31_16_DIO31_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> POLARITY31_16_DIO31_A { match self . bits { 0 => POLARITY31_16_DIO31_A :: POLARITY31_16_DIO31_DISABLE , 1 => POLARITY31_16_DIO31_A :: POLARITY31_16_DIO31_RISE , 2 => POLARITY31_16_DIO31_A :: POLARITY31_16_DIO31_FALL , 3 => POLARITY31_16_DIO31_A :: POLARITY31_16_DIO31_RISE_FALL , _ => unreachable ! () , } } # [doc = "DISABLE"] # [inline (always)] pub fn is_polarity31_16_dio31_disable (& self) -> bool { * self == POLARITY31_16_DIO31_A :: POLARITY31_16_DIO31_DISABLE } # [doc = "RISE"] # [inline (always)] pub fn is_polarity31_16_dio31_rise (& self) -> bool { * self == POLARITY31_16_DIO31_A :: POLARITY31_16_DIO31_RISE } # [doc = "FALL"] # [inline (always)] pub fn is_polarity31_16_dio31_fall (& self) -> bool { * self == POLARITY31_16_DIO31_A :: POLARITY31_16_DIO31_FALL } # [doc = "RISE_FALL"] # [inline (always)] pub fn is_polarity31_16_dio31_rise_fall (& self) -> bool { * self == POLARITY31_16_DIO31_A :: POLARITY31_16_DIO31_RISE_FALL } } # [doc = "Field `POLARITY31_16_DIO31` writer - Enables and configures edge detection polarity for DIO31."] pub type POLARITY31_16_DIO31_W < 'a , REG , const O : u8 > = crate :: FieldWriterSafe < 'a , REG , 2 , O , POLARITY31_16_DIO31_A > ; impl < 'a , REG , const O : u8 > POLARITY31_16_DIO31_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "DISABLE"] # [inline (always)] pub fn polarity31_16_dio31_disable (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO31_A :: POLARITY31_16_DIO31_DISABLE) } # [doc = "RISE"] # [inline (always)] pub fn polarity31_16_dio31_rise (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO31_A :: POLARITY31_16_DIO31_RISE) } # [doc = "FALL"] # [inline (always)] pub fn polarity31_16_dio31_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO31_A :: POLARITY31_16_DIO31_FALL) } # [doc = "RISE_FALL"] # [inline (always)] pub fn polarity31_16_dio31_rise_fall (self) -> & 'a mut crate :: W < REG > { self . variant (POLARITY31_16_DIO31_A :: POLARITY31_16_DIO31_RISE_FALL) } } impl R { # [doc = "Bits 0:1 - Enables and configures edge detection polarity for DIO16."] # [inline (always)] pub fn polarity31_16_dio16 (& self) -> POLARITY31_16_DIO16_R { POLARITY31_16_DIO16_R :: new ((self . bits & 3) as u8) } # [doc = "Bits 2:3 - Enables and configures edge detection polarity for DIO17."] # [inline (always)] pub fn polarity31_16_dio17 (& self) -> POLARITY31_16_DIO17_R { POLARITY31_16_DIO17_R :: new (((self . bits >> 2) & 3) as u8) } # [doc = "Bits 4:5 - Enables and configures edge detection polarity for DIO18."] # [inline (always)] pub fn polarity31_16_dio18 (& self) -> POLARITY31_16_DIO18_R { POLARITY31_16_DIO18_R :: new (((self . bits >> 4) & 3) as u8) } # [doc = "Bits 6:7 - Enables and configures edge detection polarity for DIO19."] # [inline (always)] pub fn polarity31_16_dio19 (& self) -> POLARITY31_16_DIO19_R { POLARITY31_16_DIO19_R :: new (((self . bits >> 6) & 3) as u8) } # [doc = "Bits 8:9 - Enables and configures edge detection polarity for DIO20."] # [inline (always)] pub fn polarity31_16_dio20 (& self) -> POLARITY31_16_DIO20_R { POLARITY31_16_DIO20_R :: new (((self . bits >> 8) & 3) as u8) } # [doc = "Bits 10:11 - Enables and configures edge detection polarity for DIO21."] # [inline (always)] pub fn polarity31_16_dio21 (& self) -> POLARITY31_16_DIO21_R { POLARITY31_16_DIO21_R :: new (((self . bits >> 10) & 3) as u8) } # [doc = "Bits 12:13 - Enables and configures edge detection polarity for DIO22."] # [inline (always)] pub fn polarity31_16_dio22 (& self) -> POLARITY31_16_DIO22_R { POLARITY31_16_DIO22_R :: new (((self . bits >> 12) & 3) as u8) } # [doc = "Bits 14:15 - Enables and configures edge detection polarity for DIO23."] # [inline (always)] pub fn polarity31_16_dio23 (& self) -> POLARITY31_16_DIO23_R { POLARITY31_16_DIO23_R :: new (((self . bits >> 14) & 3) as u8) } # [doc = "Bits 16:17 - Enables and configures edge detection polarity for DIO24."] # [inline (always)] pub fn polarity31_16_dio24 (& self) -> POLARITY31_16_DIO24_R { POLARITY31_16_DIO24_R :: new (((self . bits >> 16) & 3) as u8) } # [doc = "Bits 18:19 - Enables and configures edge detection polarity for DIO25."] # [inline (always)] pub fn polarity31_16_dio25 (& self) -> POLARITY31_16_DIO25_R { POLARITY31_16_DIO25_R :: new (((self . bits >> 18) & 3) as u8) } # [doc = "Bits 20:21 - Enables and configures edge detection polarity for DIO26."] # [inline (always)] pub fn polarity31_16_dio26 (& self) -> POLARITY31_16_DIO26_R { POLARITY31_16_DIO26_R :: new (((self . bits >> 20) & 3) as u8) } # [doc = "Bits 22:23 - Enables and configures edge detection polarity for DIO27."] # [inline (always)] pub fn polarity31_16_dio27 (& self) -> POLARITY31_16_DIO27_R { POLARITY31_16_DIO27_R :: new (((self . bits >> 22) & 3) as u8) } # [doc = "Bits 24:25 - Enables and configures edge detection polarity for DIO28."] # [inline (always)] pub fn polarity31_16_dio28 (& self) -> POLARITY31_16_DIO28_R { POLARITY31_16_DIO28_R :: new (((self . bits >> 24) & 3) as u8) } # [doc = "Bits 26:27 - Enables and configures edge detection polarity for DIO29."] # [inline (always)] pub fn polarity31_16_dio29 (& self) -> POLARITY31_16_DIO29_R { POLARITY31_16_DIO29_R :: new (((self . bits >> 26) & 3) as u8) } # [doc = "Bits 28:29 - Enables and configures edge detection polarity for DIO30."] # [inline (always)] pub fn polarity31_16_dio30 (& self) -> POLARITY31_16_DIO30_R { POLARITY31_16_DIO30_R :: new (((self . bits >> 28) & 3) as u8) } # [doc = "Bits 30:31 - Enables and configures edge detection polarity for DIO31."] # [inline (always)] pub fn polarity31_16_dio31 (& self) -> POLARITY31_16_DIO31_R { POLARITY31_16_DIO31_R :: new (((self . bits >> 30) & 3) as u8) } } impl W { # [doc = "Bits 0:1 - Enables and configures edge detection polarity for DIO16."] # [inline (always)] # [must_use] pub fn polarity31_16_dio16 (& mut self) -> POLARITY31_16_DIO16_W < POLARITY31_16_SPEC , 0 > { POLARITY31_16_DIO16_W :: new (self) } # [doc = "Bits 2:3 - Enables and configures edge detection polarity for DIO17."] # [inline (always)] # [must_use] pub fn polarity31_16_dio17 (& mut self) -> POLARITY31_16_DIO17_W < POLARITY31_16_SPEC , 2 > { POLARITY31_16_DIO17_W :: new (self) } # [doc = "Bits 4:5 - Enables and configures edge detection polarity for DIO18."] # [inline (always)] # [must_use] pub fn polarity31_16_dio18 (& mut self) -> POLARITY31_16_DIO18_W < POLARITY31_16_SPEC , 4 > { POLARITY31_16_DIO18_W :: new (self) } # [doc = "Bits 6:7 - Enables and configures edge detection polarity for DIO19."] # [inline (always)] # [must_use] pub fn polarity31_16_dio19 (& mut self) -> POLARITY31_16_DIO19_W < POLARITY31_16_SPEC , 6 > { POLARITY31_16_DIO19_W :: new (self) } # [doc = "Bits 8:9 - Enables and configures edge detection polarity for DIO20."] # [inline (always)] # [must_use] pub fn polarity31_16_dio20 (& mut self) -> POLARITY31_16_DIO20_W < POLARITY31_16_SPEC , 8 > { POLARITY31_16_DIO20_W :: new (self) } # [doc = "Bits 10:11 - Enables and configures edge detection polarity for DIO21."] # [inline (always)] # [must_use] pub fn polarity31_16_dio21 (& mut self) -> POLARITY31_16_DIO21_W < POLARITY31_16_SPEC , 10 > { POLARITY31_16_DIO21_W :: new (self) } # [doc = "Bits 12:13 - Enables and configures edge detection polarity for DIO22."] # [inline (always)] # [must_use] pub fn polarity31_16_dio22 (& mut self) -> POLARITY31_16_DIO22_W < POLARITY31_16_SPEC , 12 > { POLARITY31_16_DIO22_W :: new (self) } # [doc = "Bits 14:15 - Enables and configures edge detection polarity for DIO23."] # [inline (always)] # [must_use] pub fn polarity31_16_dio23 (& mut self) -> POLARITY31_16_DIO23_W < POLARITY31_16_SPEC , 14 > { POLARITY31_16_DIO23_W :: new (self) } # [doc = "Bits 16:17 - Enables and configures edge detection polarity for DIO24."] # [inline (always)] # [must_use] pub fn polarity31_16_dio24 (& mut self) -> POLARITY31_16_DIO24_W < POLARITY31_16_SPEC , 16 > { POLARITY31_16_DIO24_W :: new (self) } # [doc = "Bits 18:19 - Enables and configures edge detection polarity for DIO25."] # [inline (always)] # [must_use] pub fn polarity31_16_dio25 (& mut self) -> POLARITY31_16_DIO25_W < POLARITY31_16_SPEC , 18 > { POLARITY31_16_DIO25_W :: new (self) } # [doc = "Bits 20:21 - Enables and configures edge detection polarity for DIO26."] # [inline (always)] # [must_use] pub fn polarity31_16_dio26 (& mut self) -> POLARITY31_16_DIO26_W < POLARITY31_16_SPEC , 20 > { POLARITY31_16_DIO26_W :: new (self) } # [doc = "Bits 22:23 - Enables and configures edge detection polarity for DIO27."] # [inline (always)] # [must_use] pub fn polarity31_16_dio27 (& mut self) -> POLARITY31_16_DIO27_W < POLARITY31_16_SPEC , 22 > { POLARITY31_16_DIO27_W :: new (self) } # [doc = "Bits 24:25 - Enables and configures edge detection polarity for DIO28."] # [inline (always)] # [must_use] pub fn polarity31_16_dio28 (& mut self) -> POLARITY31_16_DIO28_W < POLARITY31_16_SPEC , 24 > { POLARITY31_16_DIO28_W :: new (self) } # [doc = "Bits 26:27 - Enables and configures edge detection polarity for DIO29."] # [inline (always)] # [must_use] pub fn polarity31_16_dio29 (& mut self) -> POLARITY31_16_DIO29_W < POLARITY31_16_SPEC , 26 > { POLARITY31_16_DIO29_W :: new (self) } # [doc = "Bits 28:29 - Enables and configures edge detection polarity for DIO30."] # [inline (always)] # [must_use] pub fn polarity31_16_dio30 (& mut self) -> POLARITY31_16_DIO30_W < POLARITY31_16_SPEC , 28 > { POLARITY31_16_DIO30_W :: new (self) } # [doc = "Bits 30:31 - Enables and configures edge detection polarity for DIO31."] # [inline (always)] # [must_use] pub fn polarity31_16_dio31 (& mut self) -> POLARITY31_16_DIO31_W < POLARITY31_16_SPEC , 30 > { POLARITY31_16_DIO31_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "Polarity 31 to 16\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`polarity31_16::R`](R).  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`polarity31_16::W`](W). You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct POLARITY31_16_SPEC ; impl crate :: RegisterSpec for POLARITY31_16_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [`polarity31_16::R`](R) reader structure"] impl crate :: Readable for POLARITY31_16_SPEC { } # [doc = "`write(|w| ..)` method takes [`polarity31_16::W`](W) writer structure"] impl crate :: Writable for POLARITY31_16_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets POLARITY31_16 to value 0"] impl crate :: Resettable for POLARITY31_16_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }