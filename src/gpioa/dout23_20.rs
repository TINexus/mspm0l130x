# [doc = "Register `DOUT23_20` writer"] pub type W = crate :: W < DOUT23_20_SPEC > ; # [doc = "This bit sets the value of the pin configured as DIO20 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT23_20_DIO20_AW { # [doc = "0: ZERO"] DOUT23_20_DIO20_ZERO = 0 , # [doc = "1: ONE"] DOUT23_20_DIO20_ONE = 1 , } impl From < DOUT23_20_DIO20_AW > for bool { # [inline (always)] fn from (variant : DOUT23_20_DIO20_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT23_20_DIO20` writer - This bit sets the value of the pin configured as DIO20 when the output is enabled through DOE31_0 register."] pub type DOUT23_20_DIO20_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT23_20_DIO20_AW > ; impl < 'a , REG , const O : u8 > DOUT23_20_DIO20_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout23_20_dio20_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT23_20_DIO20_AW :: DOUT23_20_DIO20_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout23_20_dio20_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT23_20_DIO20_AW :: DOUT23_20_DIO20_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO21 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT23_20_DIO21_AW { # [doc = "0: ZERO"] DOUT23_20_DIO21_ZERO = 0 , # [doc = "1: ONE"] DOUT23_20_DIO21_ONE = 1 , } impl From < DOUT23_20_DIO21_AW > for bool { # [inline (always)] fn from (variant : DOUT23_20_DIO21_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT23_20_DIO21` writer - This bit sets the value of the pin configured as DIO21 when the output is enabled through DOE31_0 register."] pub type DOUT23_20_DIO21_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT23_20_DIO21_AW > ; impl < 'a , REG , const O : u8 > DOUT23_20_DIO21_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout23_20_dio21_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT23_20_DIO21_AW :: DOUT23_20_DIO21_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout23_20_dio21_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT23_20_DIO21_AW :: DOUT23_20_DIO21_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO22 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT23_20_DIO22_AW { # [doc = "0: ZERO"] DOUT23_20_DIO22_ZERO = 0 , # [doc = "1: ONE"] DOUT23_20_DIO22_ONE = 1 , } impl From < DOUT23_20_DIO22_AW > for bool { # [inline (always)] fn from (variant : DOUT23_20_DIO22_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT23_20_DIO22` writer - This bit sets the value of the pin configured as DIO22 when the output is enabled through DOE31_0 register."] pub type DOUT23_20_DIO22_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT23_20_DIO22_AW > ; impl < 'a , REG , const O : u8 > DOUT23_20_DIO22_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout23_20_dio22_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT23_20_DIO22_AW :: DOUT23_20_DIO22_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout23_20_dio22_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT23_20_DIO22_AW :: DOUT23_20_DIO22_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO23 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT23_20_DIO23_AW { # [doc = "0: ZERO"] DOUT23_20_DIO23_ZERO = 0 , # [doc = "1: ONE"] DOUT23_20_DIO23_ONE = 1 , } impl From < DOUT23_20_DIO23_AW > for bool { # [inline (always)] fn from (variant : DOUT23_20_DIO23_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT23_20_DIO23` writer - This bit sets the value of the pin configured as DIO23 when the output is enabled through DOE31_0 register."] pub type DOUT23_20_DIO23_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT23_20_DIO23_AW > ; impl < 'a , REG , const O : u8 > DOUT23_20_DIO23_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout23_20_dio23_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT23_20_DIO23_AW :: DOUT23_20_DIO23_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout23_20_dio23_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT23_20_DIO23_AW :: DOUT23_20_DIO23_ONE) } } impl W { # [doc = "Bit 0 - This bit sets the value of the pin configured as DIO20 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout23_20_dio20 (& mut self) -> DOUT23_20_DIO20_W < DOUT23_20_SPEC , 0 > { DOUT23_20_DIO20_W :: new (self) } # [doc = "Bit 8 - This bit sets the value of the pin configured as DIO21 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout23_20_dio21 (& mut self) -> DOUT23_20_DIO21_W < DOUT23_20_SPEC , 8 > { DOUT23_20_DIO21_W :: new (self) } # [doc = "Bit 16 - This bit sets the value of the pin configured as DIO22 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout23_20_dio22 (& mut self) -> DOUT23_20_DIO22_W < DOUT23_20_SPEC , 16 > { DOUT23_20_DIO22_W :: new (self) } # [doc = "Bit 24 - This bit sets the value of the pin configured as DIO23 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout23_20_dio23 (& mut self) -> DOUT23_20_DIO23_W < DOUT23_20_SPEC , 24 > { DOUT23_20_DIO23_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "Data output 23 to 20\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`dout23_20::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct DOUT23_20_SPEC ; impl crate :: RegisterSpec for DOUT23_20_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`dout23_20::W`](W) writer structure"] impl crate :: Writable for DOUT23_20_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets DOUT23_20 to value 0"] impl crate :: Resettable for DOUT23_20_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }