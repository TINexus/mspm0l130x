# [doc = "Register `DOUTSET31_0` writer"] pub type W = crate :: W < DOUTSET31_0_SPEC > ; # [doc = "Writing 1 to this bit sets the DIO0 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO0_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO0_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO0_SET = 1 , } impl From < DOUTSET31_0_DIO0_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO0_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO0` writer - Writing 1 to this bit sets the DIO0 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO0_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO0_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO0_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio0_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO0_AW :: DOUTSET31_0_DIO0_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio0_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO0_AW :: DOUTSET31_0_DIO0_SET) } } # [doc = "Writing 1 to this bit sets the DIO1 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO1_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO1_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO1_SET = 1 , } impl From < DOUTSET31_0_DIO1_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO1_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO1` writer - Writing 1 to this bit sets the DIO1 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO1_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO1_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO1_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio1_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO1_AW :: DOUTSET31_0_DIO1_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio1_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO1_AW :: DOUTSET31_0_DIO1_SET) } } # [doc = "Writing 1 to this bit sets the DIO2 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO2_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO2_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO2_SET = 1 , } impl From < DOUTSET31_0_DIO2_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO2_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO2` writer - Writing 1 to this bit sets the DIO2 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO2_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO2_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO2_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio2_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO2_AW :: DOUTSET31_0_DIO2_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio2_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO2_AW :: DOUTSET31_0_DIO2_SET) } } # [doc = "Writing 1 to this bit sets the DIO3 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO3_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO3_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO3_SET = 1 , } impl From < DOUTSET31_0_DIO3_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO3_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO3` writer - Writing 1 to this bit sets the DIO3 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO3_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO3_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO3_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio3_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO3_AW :: DOUTSET31_0_DIO3_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio3_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO3_AW :: DOUTSET31_0_DIO3_SET) } } # [doc = "Writing 1 to this bit sets the DIO4 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO4_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO4_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO4_SET = 1 , } impl From < DOUTSET31_0_DIO4_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO4_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO4` writer - Writing 1 to this bit sets the DIO4 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO4_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO4_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO4_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio4_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO4_AW :: DOUTSET31_0_DIO4_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio4_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO4_AW :: DOUTSET31_0_DIO4_SET) } } # [doc = "Writing 1 to this bit sets the DIO5 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO5_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO5_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO5_SET = 1 , } impl From < DOUTSET31_0_DIO5_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO5_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO5` writer - Writing 1 to this bit sets the DIO5 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO5_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO5_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO5_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio5_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO5_AW :: DOUTSET31_0_DIO5_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio5_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO5_AW :: DOUTSET31_0_DIO5_SET) } } # [doc = "Writing 1 to this bit sets the DIO6 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO6_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO6_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO6_SET = 1 , } impl From < DOUTSET31_0_DIO6_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO6_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO6` writer - Writing 1 to this bit sets the DIO6 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO6_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO6_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO6_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio6_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO6_AW :: DOUTSET31_0_DIO6_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio6_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO6_AW :: DOUTSET31_0_DIO6_SET) } } # [doc = "Writing 1 to this bit sets the DIO7 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO7_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO7_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO7_SET = 1 , } impl From < DOUTSET31_0_DIO7_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO7_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO7` writer - Writing 1 to this bit sets the DIO7 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO7_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO7_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO7_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio7_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO7_AW :: DOUTSET31_0_DIO7_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio7_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO7_AW :: DOUTSET31_0_DIO7_SET) } } # [doc = "Writing 1 to this bit sets the DIO8 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO8_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO8_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO8_SET = 1 , } impl From < DOUTSET31_0_DIO8_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO8_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO8` writer - Writing 1 to this bit sets the DIO8 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO8_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO8_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO8_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio8_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO8_AW :: DOUTSET31_0_DIO8_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio8_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO8_AW :: DOUTSET31_0_DIO8_SET) } } # [doc = "Writing 1 to this bit sets the DIO9 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO9_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO9_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO9_SET = 1 , } impl From < DOUTSET31_0_DIO9_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO9_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO9` writer - Writing 1 to this bit sets the DIO9 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO9_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO9_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO9_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio9_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO9_AW :: DOUTSET31_0_DIO9_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio9_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO9_AW :: DOUTSET31_0_DIO9_SET) } } # [doc = "Writing 1 to this bit sets the DIO10 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO10_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO10_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO10_SET = 1 , } impl From < DOUTSET31_0_DIO10_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO10_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO10` writer - Writing 1 to this bit sets the DIO10 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO10_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO10_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO10_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio10_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO10_AW :: DOUTSET31_0_DIO10_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio10_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO10_AW :: DOUTSET31_0_DIO10_SET) } } # [doc = "Writing 1 to this bit sets the DIO11 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO11_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO11_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO11_SET = 1 , } impl From < DOUTSET31_0_DIO11_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO11_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO11` writer - Writing 1 to this bit sets the DIO11 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO11_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO11_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO11_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio11_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO11_AW :: DOUTSET31_0_DIO11_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio11_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO11_AW :: DOUTSET31_0_DIO11_SET) } } # [doc = "Writing 1 to this bit sets the DIO12 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO12_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO12_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO12_SET = 1 , } impl From < DOUTSET31_0_DIO12_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO12_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO12` writer - Writing 1 to this bit sets the DIO12 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO12_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO12_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO12_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio12_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO12_AW :: DOUTSET31_0_DIO12_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio12_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO12_AW :: DOUTSET31_0_DIO12_SET) } } # [doc = "Writing 1 to this bit sets the DIO13 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO13_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO13_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO13_SET = 1 , } impl From < DOUTSET31_0_DIO13_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO13_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO13` writer - Writing 1 to this bit sets the DIO13 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO13_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO13_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO13_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio13_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO13_AW :: DOUTSET31_0_DIO13_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio13_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO13_AW :: DOUTSET31_0_DIO13_SET) } } # [doc = "Writing 1 to this bit sets the DIO14 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO14_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO14_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO14_SET = 1 , } impl From < DOUTSET31_0_DIO14_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO14_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO14` writer - Writing 1 to this bit sets the DIO14 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO14_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO14_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO14_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio14_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO14_AW :: DOUTSET31_0_DIO14_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio14_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO14_AW :: DOUTSET31_0_DIO14_SET) } } # [doc = "Writing 1 to this bit sets the DIO15 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO15_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO15_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO15_SET = 1 , } impl From < DOUTSET31_0_DIO15_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO15_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO15` writer - Writing 1 to this bit sets the DIO15 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO15_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO15_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO15_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio15_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO15_AW :: DOUTSET31_0_DIO15_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio15_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO15_AW :: DOUTSET31_0_DIO15_SET) } } # [doc = "Writing 1 to this bit sets the DIO16 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO16_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO16_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO16_SET = 1 , } impl From < DOUTSET31_0_DIO16_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO16_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO16` writer - Writing 1 to this bit sets the DIO16 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO16_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO16_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO16_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio16_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO16_AW :: DOUTSET31_0_DIO16_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio16_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO16_AW :: DOUTSET31_0_DIO16_SET) } } # [doc = "Writing 1 to this bit sets the DIO17 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO17_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO17_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO17_SET = 1 , } impl From < DOUTSET31_0_DIO17_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO17_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO17` writer - Writing 1 to this bit sets the DIO17 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO17_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO17_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO17_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio17_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO17_AW :: DOUTSET31_0_DIO17_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio17_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO17_AW :: DOUTSET31_0_DIO17_SET) } } # [doc = "Writing 1 to this bit sets the DIO18 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO18_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO18_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO18_SET = 1 , } impl From < DOUTSET31_0_DIO18_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO18_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO18` writer - Writing 1 to this bit sets the DIO18 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO18_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO18_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO18_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio18_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO18_AW :: DOUTSET31_0_DIO18_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio18_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO18_AW :: DOUTSET31_0_DIO18_SET) } } # [doc = "Writing 1 to this bit sets the DIO19 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO19_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO19_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO19_SET = 1 , } impl From < DOUTSET31_0_DIO19_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO19_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO19` writer - Writing 1 to this bit sets the DIO19 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO19_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO19_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO19_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio19_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO19_AW :: DOUTSET31_0_DIO19_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio19_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO19_AW :: DOUTSET31_0_DIO19_SET) } } # [doc = "Writing 1 to this bit sets the DIO20 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO20_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO20_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO20_SET = 1 , } impl From < DOUTSET31_0_DIO20_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO20_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO20` writer - Writing 1 to this bit sets the DIO20 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO20_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO20_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO20_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio20_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO20_AW :: DOUTSET31_0_DIO20_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio20_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO20_AW :: DOUTSET31_0_DIO20_SET) } } # [doc = "Writing 1 to this bit sets the DIO21 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO21_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO21_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO21_SET = 1 , } impl From < DOUTSET31_0_DIO21_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO21_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO21` writer - Writing 1 to this bit sets the DIO21 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO21_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO21_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO21_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio21_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO21_AW :: DOUTSET31_0_DIO21_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio21_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO21_AW :: DOUTSET31_0_DIO21_SET) } } # [doc = "Writing 1 to this bit sets the DIO22 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO22_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO22_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO22_SET = 1 , } impl From < DOUTSET31_0_DIO22_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO22_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO22` writer - Writing 1 to this bit sets the DIO22 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO22_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO22_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO22_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio22_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO22_AW :: DOUTSET31_0_DIO22_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio22_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO22_AW :: DOUTSET31_0_DIO22_SET) } } # [doc = "Writing 1 to this bit sets the DIO23 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO23_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO23_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO23_SET = 1 , } impl From < DOUTSET31_0_DIO23_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO23_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO23` writer - Writing 1 to this bit sets the DIO23 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO23_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO23_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO23_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio23_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO23_AW :: DOUTSET31_0_DIO23_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio23_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO23_AW :: DOUTSET31_0_DIO23_SET) } } # [doc = "Writing 1 to this bit sets the DIO24 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO24_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO24_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO24_SET = 1 , } impl From < DOUTSET31_0_DIO24_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO24_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO24` writer - Writing 1 to this bit sets the DIO24 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO24_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO24_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO24_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio24_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO24_AW :: DOUTSET31_0_DIO24_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio24_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO24_AW :: DOUTSET31_0_DIO24_SET) } } # [doc = "Writing 1 to this bit sets the DIO25 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO25_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO25_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO25_SET = 1 , } impl From < DOUTSET31_0_DIO25_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO25_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO25` writer - Writing 1 to this bit sets the DIO25 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO25_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO25_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO25_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio25_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO25_AW :: DOUTSET31_0_DIO25_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio25_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO25_AW :: DOUTSET31_0_DIO25_SET) } } # [doc = "Writing 1 to this bit sets the DIO26 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO26_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO26_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO26_SET = 1 , } impl From < DOUTSET31_0_DIO26_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO26_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO26` writer - Writing 1 to this bit sets the DIO26 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO26_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO26_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO26_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio26_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO26_AW :: DOUTSET31_0_DIO26_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio26_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO26_AW :: DOUTSET31_0_DIO26_SET) } } # [doc = "Writing 1 to this bit sets the DIO27 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO27_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO27_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO27_SET = 1 , } impl From < DOUTSET31_0_DIO27_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO27_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO27` writer - Writing 1 to this bit sets the DIO27 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO27_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO27_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO27_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio27_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO27_AW :: DOUTSET31_0_DIO27_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio27_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO27_AW :: DOUTSET31_0_DIO27_SET) } } # [doc = "Writing 1 to this bit sets the DIO28 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO28_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO28_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO28_SET = 1 , } impl From < DOUTSET31_0_DIO28_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO28_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO28` writer - Writing 1 to this bit sets the DIO28 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO28_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO28_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO28_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio28_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO28_AW :: DOUTSET31_0_DIO28_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio28_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO28_AW :: DOUTSET31_0_DIO28_SET) } } # [doc = "Writing 1 to this bit sets the DIO29 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO29_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO29_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO29_SET = 1 , } impl From < DOUTSET31_0_DIO29_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO29_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO29` writer - Writing 1 to this bit sets the DIO29 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO29_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO29_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO29_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio29_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO29_AW :: DOUTSET31_0_DIO29_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio29_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO29_AW :: DOUTSET31_0_DIO29_SET) } } # [doc = "Writing 1 to this bit sets the DIO30 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO30_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO30_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO30_SET = 1 , } impl From < DOUTSET31_0_DIO30_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO30_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO30` writer - Writing 1 to this bit sets the DIO30 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO30_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO30_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO30_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio30_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO30_AW :: DOUTSET31_0_DIO30_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio30_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO30_AW :: DOUTSET31_0_DIO30_SET) } } # [doc = "Writing 1 to this bit sets the DIO31 bit in the DOUT31_0 register. Writing 0 has no effect.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUTSET31_0_DIO31_AW { # [doc = "0: NO_EFFECT"] DOUTSET31_0_DIO31_NO_EFFECT = 0 , # [doc = "1: SET"] DOUTSET31_0_DIO31_SET = 1 , } impl From < DOUTSET31_0_DIO31_AW > for bool { # [inline (always)] fn from (variant : DOUTSET31_0_DIO31_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUTSET31_0_DIO31` writer - Writing 1 to this bit sets the DIO31 bit in the DOUT31_0 register. Writing 0 has no effect."] pub type DOUTSET31_0_DIO31_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUTSET31_0_DIO31_AW > ; impl < 'a , REG , const O : u8 > DOUTSET31_0_DIO31_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn doutset31_0_dio31_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO31_AW :: DOUTSET31_0_DIO31_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn doutset31_0_dio31_set (self) -> & 'a mut crate :: W < REG > { self . variant (DOUTSET31_0_DIO31_AW :: DOUTSET31_0_DIO31_SET) } } impl W { # [doc = "Bit 0 - Writing 1 to this bit sets the DIO0 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio0 (& mut self) -> DOUTSET31_0_DIO0_W < DOUTSET31_0_SPEC , 0 > { DOUTSET31_0_DIO0_W :: new (self) } # [doc = "Bit 1 - Writing 1 to this bit sets the DIO1 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio1 (& mut self) -> DOUTSET31_0_DIO1_W < DOUTSET31_0_SPEC , 1 > { DOUTSET31_0_DIO1_W :: new (self) } # [doc = "Bit 2 - Writing 1 to this bit sets the DIO2 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio2 (& mut self) -> DOUTSET31_0_DIO2_W < DOUTSET31_0_SPEC , 2 > { DOUTSET31_0_DIO2_W :: new (self) } # [doc = "Bit 3 - Writing 1 to this bit sets the DIO3 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio3 (& mut self) -> DOUTSET31_0_DIO3_W < DOUTSET31_0_SPEC , 3 > { DOUTSET31_0_DIO3_W :: new (self) } # [doc = "Bit 4 - Writing 1 to this bit sets the DIO4 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio4 (& mut self) -> DOUTSET31_0_DIO4_W < DOUTSET31_0_SPEC , 4 > { DOUTSET31_0_DIO4_W :: new (self) } # [doc = "Bit 5 - Writing 1 to this bit sets the DIO5 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio5 (& mut self) -> DOUTSET31_0_DIO5_W < DOUTSET31_0_SPEC , 5 > { DOUTSET31_0_DIO5_W :: new (self) } # [doc = "Bit 6 - Writing 1 to this bit sets the DIO6 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio6 (& mut self) -> DOUTSET31_0_DIO6_W < DOUTSET31_0_SPEC , 6 > { DOUTSET31_0_DIO6_W :: new (self) } # [doc = "Bit 7 - Writing 1 to this bit sets the DIO7 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio7 (& mut self) -> DOUTSET31_0_DIO7_W < DOUTSET31_0_SPEC , 7 > { DOUTSET31_0_DIO7_W :: new (self) } # [doc = "Bit 8 - Writing 1 to this bit sets the DIO8 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio8 (& mut self) -> DOUTSET31_0_DIO8_W < DOUTSET31_0_SPEC , 8 > { DOUTSET31_0_DIO8_W :: new (self) } # [doc = "Bit 9 - Writing 1 to this bit sets the DIO9 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio9 (& mut self) -> DOUTSET31_0_DIO9_W < DOUTSET31_0_SPEC , 9 > { DOUTSET31_0_DIO9_W :: new (self) } # [doc = "Bit 10 - Writing 1 to this bit sets the DIO10 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio10 (& mut self) -> DOUTSET31_0_DIO10_W < DOUTSET31_0_SPEC , 10 > { DOUTSET31_0_DIO10_W :: new (self) } # [doc = "Bit 11 - Writing 1 to this bit sets the DIO11 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio11 (& mut self) -> DOUTSET31_0_DIO11_W < DOUTSET31_0_SPEC , 11 > { DOUTSET31_0_DIO11_W :: new (self) } # [doc = "Bit 12 - Writing 1 to this bit sets the DIO12 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio12 (& mut self) -> DOUTSET31_0_DIO12_W < DOUTSET31_0_SPEC , 12 > { DOUTSET31_0_DIO12_W :: new (self) } # [doc = "Bit 13 - Writing 1 to this bit sets the DIO13 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio13 (& mut self) -> DOUTSET31_0_DIO13_W < DOUTSET31_0_SPEC , 13 > { DOUTSET31_0_DIO13_W :: new (self) } # [doc = "Bit 14 - Writing 1 to this bit sets the DIO14 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio14 (& mut self) -> DOUTSET31_0_DIO14_W < DOUTSET31_0_SPEC , 14 > { DOUTSET31_0_DIO14_W :: new (self) } # [doc = "Bit 15 - Writing 1 to this bit sets the DIO15 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio15 (& mut self) -> DOUTSET31_0_DIO15_W < DOUTSET31_0_SPEC , 15 > { DOUTSET31_0_DIO15_W :: new (self) } # [doc = "Bit 16 - Writing 1 to this bit sets the DIO16 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio16 (& mut self) -> DOUTSET31_0_DIO16_W < DOUTSET31_0_SPEC , 16 > { DOUTSET31_0_DIO16_W :: new (self) } # [doc = "Bit 17 - Writing 1 to this bit sets the DIO17 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio17 (& mut self) -> DOUTSET31_0_DIO17_W < DOUTSET31_0_SPEC , 17 > { DOUTSET31_0_DIO17_W :: new (self) } # [doc = "Bit 18 - Writing 1 to this bit sets the DIO18 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio18 (& mut self) -> DOUTSET31_0_DIO18_W < DOUTSET31_0_SPEC , 18 > { DOUTSET31_0_DIO18_W :: new (self) } # [doc = "Bit 19 - Writing 1 to this bit sets the DIO19 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio19 (& mut self) -> DOUTSET31_0_DIO19_W < DOUTSET31_0_SPEC , 19 > { DOUTSET31_0_DIO19_W :: new (self) } # [doc = "Bit 20 - Writing 1 to this bit sets the DIO20 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio20 (& mut self) -> DOUTSET31_0_DIO20_W < DOUTSET31_0_SPEC , 20 > { DOUTSET31_0_DIO20_W :: new (self) } # [doc = "Bit 21 - Writing 1 to this bit sets the DIO21 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio21 (& mut self) -> DOUTSET31_0_DIO21_W < DOUTSET31_0_SPEC , 21 > { DOUTSET31_0_DIO21_W :: new (self) } # [doc = "Bit 22 - Writing 1 to this bit sets the DIO22 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio22 (& mut self) -> DOUTSET31_0_DIO22_W < DOUTSET31_0_SPEC , 22 > { DOUTSET31_0_DIO22_W :: new (self) } # [doc = "Bit 23 - Writing 1 to this bit sets the DIO23 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio23 (& mut self) -> DOUTSET31_0_DIO23_W < DOUTSET31_0_SPEC , 23 > { DOUTSET31_0_DIO23_W :: new (self) } # [doc = "Bit 24 - Writing 1 to this bit sets the DIO24 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio24 (& mut self) -> DOUTSET31_0_DIO24_W < DOUTSET31_0_SPEC , 24 > { DOUTSET31_0_DIO24_W :: new (self) } # [doc = "Bit 25 - Writing 1 to this bit sets the DIO25 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio25 (& mut self) -> DOUTSET31_0_DIO25_W < DOUTSET31_0_SPEC , 25 > { DOUTSET31_0_DIO25_W :: new (self) } # [doc = "Bit 26 - Writing 1 to this bit sets the DIO26 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio26 (& mut self) -> DOUTSET31_0_DIO26_W < DOUTSET31_0_SPEC , 26 > { DOUTSET31_0_DIO26_W :: new (self) } # [doc = "Bit 27 - Writing 1 to this bit sets the DIO27 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio27 (& mut self) -> DOUTSET31_0_DIO27_W < DOUTSET31_0_SPEC , 27 > { DOUTSET31_0_DIO27_W :: new (self) } # [doc = "Bit 28 - Writing 1 to this bit sets the DIO28 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio28 (& mut self) -> DOUTSET31_0_DIO28_W < DOUTSET31_0_SPEC , 28 > { DOUTSET31_0_DIO28_W :: new (self) } # [doc = "Bit 29 - Writing 1 to this bit sets the DIO29 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio29 (& mut self) -> DOUTSET31_0_DIO29_W < DOUTSET31_0_SPEC , 29 > { DOUTSET31_0_DIO29_W :: new (self) } # [doc = "Bit 30 - Writing 1 to this bit sets the DIO30 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio30 (& mut self) -> DOUTSET31_0_DIO30_W < DOUTSET31_0_SPEC , 30 > { DOUTSET31_0_DIO30_W :: new (self) } # [doc = "Bit 31 - Writing 1 to this bit sets the DIO31 bit in the DOUT31_0 register. Writing 0 has no effect."] # [inline (always)] # [must_use] pub fn doutset31_0_dio31 (& mut self) -> DOUTSET31_0_DIO31_W < DOUTSET31_0_SPEC , 31 > { DOUTSET31_0_DIO31_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "Data output set 31 to 0\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`doutset31_0::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct DOUTSET31_0_SPEC ; impl crate :: RegisterSpec for DOUTSET31_0_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`doutset31_0::W`](W) writer structure"] impl crate :: Writable for DOUTSET31_0_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets DOUTSET31_0 to value 0"] impl crate :: Resettable for DOUTSET31_0_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }