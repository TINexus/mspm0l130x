# [doc = "Register `DOUT19_16` writer"] pub type W = crate :: W < DOUT19_16_SPEC > ; # [doc = "This bit sets the value of the pin configured as DIO16 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT19_16_DIO16_AW { # [doc = "0: ZERO"] DOUT19_16_DIO16_ZERO = 0 , # [doc = "1: ONE"] DOUT19_16_DIO16_ONE = 1 , } impl From < DOUT19_16_DIO16_AW > for bool { # [inline (always)] fn from (variant : DOUT19_16_DIO16_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT19_16_DIO16` writer - This bit sets the value of the pin configured as DIO16 when the output is enabled through DOE31_0 register."] pub type DOUT19_16_DIO16_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT19_16_DIO16_AW > ; impl < 'a , REG , const O : u8 > DOUT19_16_DIO16_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout19_16_dio16_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT19_16_DIO16_AW :: DOUT19_16_DIO16_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout19_16_dio16_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT19_16_DIO16_AW :: DOUT19_16_DIO16_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO17 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT19_16_DIO17_AW { # [doc = "0: ZERO"] DOUT19_16_DIO17_ZERO = 0 , # [doc = "1: ONE"] DOUT19_16_DIO17_ONE = 1 , } impl From < DOUT19_16_DIO17_AW > for bool { # [inline (always)] fn from (variant : DOUT19_16_DIO17_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT19_16_DIO17` writer - This bit sets the value of the pin configured as DIO17 when the output is enabled through DOE31_0 register."] pub type DOUT19_16_DIO17_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT19_16_DIO17_AW > ; impl < 'a , REG , const O : u8 > DOUT19_16_DIO17_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout19_16_dio17_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT19_16_DIO17_AW :: DOUT19_16_DIO17_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout19_16_dio17_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT19_16_DIO17_AW :: DOUT19_16_DIO17_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO18 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT19_16_DIO18_AW { # [doc = "0: ZERO"] DOUT19_16_DIO18_ZERO = 0 , # [doc = "1: ONE"] DOUT19_16_DIO18_ONE = 1 , } impl From < DOUT19_16_DIO18_AW > for bool { # [inline (always)] fn from (variant : DOUT19_16_DIO18_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT19_16_DIO18` writer - This bit sets the value of the pin configured as DIO18 when the output is enabled through DOE31_0 register."] pub type DOUT19_16_DIO18_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT19_16_DIO18_AW > ; impl < 'a , REG , const O : u8 > DOUT19_16_DIO18_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout19_16_dio18_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT19_16_DIO18_AW :: DOUT19_16_DIO18_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout19_16_dio18_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT19_16_DIO18_AW :: DOUT19_16_DIO18_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO19 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT19_16_DIO19_AW { # [doc = "0: ZERO"] DOUT19_16_DIO19_ZERO = 0 , # [doc = "1: ONE"] DOUT19_16_DIO19_ONE = 1 , } impl From < DOUT19_16_DIO19_AW > for bool { # [inline (always)] fn from (variant : DOUT19_16_DIO19_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT19_16_DIO19` writer - This bit sets the value of the pin configured as DIO19 when the output is enabled through DOE31_0 register."] pub type DOUT19_16_DIO19_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT19_16_DIO19_AW > ; impl < 'a , REG , const O : u8 > DOUT19_16_DIO19_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout19_16_dio19_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT19_16_DIO19_AW :: DOUT19_16_DIO19_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout19_16_dio19_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT19_16_DIO19_AW :: DOUT19_16_DIO19_ONE) } } impl W { # [doc = "Bit 0 - This bit sets the value of the pin configured as DIO16 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout19_16_dio16 (& mut self) -> DOUT19_16_DIO16_W < DOUT19_16_SPEC , 0 > { DOUT19_16_DIO16_W :: new (self) } # [doc = "Bit 8 - This bit sets the value of the pin configured as DIO17 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout19_16_dio17 (& mut self) -> DOUT19_16_DIO17_W < DOUT19_16_SPEC , 8 > { DOUT19_16_DIO17_W :: new (self) } # [doc = "Bit 16 - This bit sets the value of the pin configured as DIO18 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout19_16_dio18 (& mut self) -> DOUT19_16_DIO18_W < DOUT19_16_SPEC , 16 > { DOUT19_16_DIO18_W :: new (self) } # [doc = "Bit 24 - This bit sets the value of the pin configured as DIO19 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout19_16_dio19 (& mut self) -> DOUT19_16_DIO19_W < DOUT19_16_SPEC , 24 > { DOUT19_16_DIO19_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "Data output 19 to 16\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`dout19_16::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct DOUT19_16_SPEC ; impl crate :: RegisterSpec for DOUT19_16_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`dout19_16::W`](W) writer structure"] impl crate :: Writable for DOUT19_16_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets DOUT19_16 to value 0"] impl crate :: Resettable for DOUT19_16_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }