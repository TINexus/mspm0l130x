# [doc = "Register `DOUT3_0` writer"] pub type W = crate :: W < DOUT3_0_SPEC > ; # [doc = "This bit sets the value of the pin configured as DIO0 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT3_0_DIO0_AW { # [doc = "0: ZERO"] DOUT3_0_DIO0_ZERO = 0 , # [doc = "1: ONE"] DOUT3_0_DIO0_ONE = 1 , } impl From < DOUT3_0_DIO0_AW > for bool { # [inline (always)] fn from (variant : DOUT3_0_DIO0_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT3_0_DIO0` writer - This bit sets the value of the pin configured as DIO0 when the output is enabled through DOE31_0 register."] pub type DOUT3_0_DIO0_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT3_0_DIO0_AW > ; impl < 'a , REG , const O : u8 > DOUT3_0_DIO0_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout3_0_dio0_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT3_0_DIO0_AW :: DOUT3_0_DIO0_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout3_0_dio0_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT3_0_DIO0_AW :: DOUT3_0_DIO0_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO1 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT3_0_DIO1_AW { # [doc = "0: ZERO"] DOUT3_0_DIO1_ZERO = 0 , # [doc = "1: ONE"] DOUT3_0_DIO1_ONE = 1 , } impl From < DOUT3_0_DIO1_AW > for bool { # [inline (always)] fn from (variant : DOUT3_0_DIO1_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT3_0_DIO1` writer - This bit sets the value of the pin configured as DIO1 when the output is enabled through DOE31_0 register."] pub type DOUT3_0_DIO1_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT3_0_DIO1_AW > ; impl < 'a , REG , const O : u8 > DOUT3_0_DIO1_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout3_0_dio1_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT3_0_DIO1_AW :: DOUT3_0_DIO1_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout3_0_dio1_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT3_0_DIO1_AW :: DOUT3_0_DIO1_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO2 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT3_0_DIO2_AW { # [doc = "0: ZERO"] DOUT3_0_DIO2_ZERO = 0 , # [doc = "1: ONE"] DOUT3_0_DIO2_ONE = 1 , } impl From < DOUT3_0_DIO2_AW > for bool { # [inline (always)] fn from (variant : DOUT3_0_DIO2_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT3_0_DIO2` writer - This bit sets the value of the pin configured as DIO2 when the output is enabled through DOE31_0 register."] pub type DOUT3_0_DIO2_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT3_0_DIO2_AW > ; impl < 'a , REG , const O : u8 > DOUT3_0_DIO2_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout3_0_dio2_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT3_0_DIO2_AW :: DOUT3_0_DIO2_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout3_0_dio2_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT3_0_DIO2_AW :: DOUT3_0_DIO2_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO3 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT3_0_DIO3_AW { # [doc = "0: ZERO"] DOUT3_0_DIO3_ZERO = 0 , # [doc = "1: ONE"] DOUT3_0_DIO3_ONE = 1 , } impl From < DOUT3_0_DIO3_AW > for bool { # [inline (always)] fn from (variant : DOUT3_0_DIO3_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT3_0_DIO3` writer - This bit sets the value of the pin configured as DIO3 when the output is enabled through DOE31_0 register."] pub type DOUT3_0_DIO3_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT3_0_DIO3_AW > ; impl < 'a , REG , const O : u8 > DOUT3_0_DIO3_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout3_0_dio3_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT3_0_DIO3_AW :: DOUT3_0_DIO3_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout3_0_dio3_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT3_0_DIO3_AW :: DOUT3_0_DIO3_ONE) } } impl W { # [doc = "Bit 0 - This bit sets the value of the pin configured as DIO0 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout3_0_dio0 (& mut self) -> DOUT3_0_DIO0_W < DOUT3_0_SPEC , 0 > { DOUT3_0_DIO0_W :: new (self) } # [doc = "Bit 8 - This bit sets the value of the pin configured as DIO1 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout3_0_dio1 (& mut self) -> DOUT3_0_DIO1_W < DOUT3_0_SPEC , 8 > { DOUT3_0_DIO1_W :: new (self) } # [doc = "Bit 16 - This bit sets the value of the pin configured as DIO2 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout3_0_dio2 (& mut self) -> DOUT3_0_DIO2_W < DOUT3_0_SPEC , 16 > { DOUT3_0_DIO2_W :: new (self) } # [doc = "Bit 24 - This bit sets the value of the pin configured as DIO3 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout3_0_dio3 (& mut self) -> DOUT3_0_DIO3_W < DOUT3_0_SPEC , 24 > { DOUT3_0_DIO3_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "Data output 3 to 0\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`dout3_0::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct DOUT3_0_SPEC ; impl crate :: RegisterSpec for DOUT3_0_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`dout3_0::W`](W) writer structure"] impl crate :: Writable for DOUT3_0_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets DOUT3_0 to value 0"] impl crate :: Resettable for DOUT3_0_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }