# [doc = "Register `DOUT11_8` writer"] pub type W = crate :: W < DOUT11_8_SPEC > ; # [doc = "This bit sets the value of the pin configured as DIO8 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT11_8_DIO8_AW { # [doc = "0: ZERO"] DOUT11_8_DIO8_ZERO = 0 , # [doc = "1: ONE"] DOUT11_8_DIO8_ONE = 1 , } impl From < DOUT11_8_DIO8_AW > for bool { # [inline (always)] fn from (variant : DOUT11_8_DIO8_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT11_8_DIO8` writer - This bit sets the value of the pin configured as DIO8 when the output is enabled through DOE31_0 register."] pub type DOUT11_8_DIO8_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT11_8_DIO8_AW > ; impl < 'a , REG , const O : u8 > DOUT11_8_DIO8_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout11_8_dio8_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT11_8_DIO8_AW :: DOUT11_8_DIO8_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout11_8_dio8_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT11_8_DIO8_AW :: DOUT11_8_DIO8_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO9 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT11_8_DIO9_AW { # [doc = "0: ZERO"] DOUT11_8_DIO9_ZERO = 0 , # [doc = "1: ONE"] DOUT11_8_DIO9_ONE = 1 , } impl From < DOUT11_8_DIO9_AW > for bool { # [inline (always)] fn from (variant : DOUT11_8_DIO9_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT11_8_DIO9` writer - This bit sets the value of the pin configured as DIO9 when the output is enabled through DOE31_0 register."] pub type DOUT11_8_DIO9_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT11_8_DIO9_AW > ; impl < 'a , REG , const O : u8 > DOUT11_8_DIO9_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout11_8_dio9_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT11_8_DIO9_AW :: DOUT11_8_DIO9_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout11_8_dio9_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT11_8_DIO9_AW :: DOUT11_8_DIO9_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO10 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT11_8_DIO10_AW { # [doc = "0: ZERO"] DOUT11_8_DIO10_ZERO = 0 , # [doc = "1: ONE"] DOUT11_8_DIO10_ONE = 1 , } impl From < DOUT11_8_DIO10_AW > for bool { # [inline (always)] fn from (variant : DOUT11_8_DIO10_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT11_8_DIO10` writer - This bit sets the value of the pin configured as DIO10 when the output is enabled through DOE31_0 register."] pub type DOUT11_8_DIO10_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT11_8_DIO10_AW > ; impl < 'a , REG , const O : u8 > DOUT11_8_DIO10_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout11_8_dio10_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT11_8_DIO10_AW :: DOUT11_8_DIO10_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout11_8_dio10_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT11_8_DIO10_AW :: DOUT11_8_DIO10_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO11 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT11_8_DIO11_AW { # [doc = "0: ZERO"] DOUT11_8_DIO11_ZERO = 0 , # [doc = "1: ONE"] DOUT11_8_DIO11_ONE = 1 , } impl From < DOUT11_8_DIO11_AW > for bool { # [inline (always)] fn from (variant : DOUT11_8_DIO11_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT11_8_DIO11` writer - This bit sets the value of the pin configured as DIO11 when the output is enabled through DOE31_0 register."] pub type DOUT11_8_DIO11_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT11_8_DIO11_AW > ; impl < 'a , REG , const O : u8 > DOUT11_8_DIO11_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout11_8_dio11_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT11_8_DIO11_AW :: DOUT11_8_DIO11_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout11_8_dio11_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT11_8_DIO11_AW :: DOUT11_8_DIO11_ONE) } } impl W { # [doc = "Bit 0 - This bit sets the value of the pin configured as DIO8 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout11_8_dio8 (& mut self) -> DOUT11_8_DIO8_W < DOUT11_8_SPEC , 0 > { DOUT11_8_DIO8_W :: new (self) } # [doc = "Bit 8 - This bit sets the value of the pin configured as DIO9 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout11_8_dio9 (& mut self) -> DOUT11_8_DIO9_W < DOUT11_8_SPEC , 8 > { DOUT11_8_DIO9_W :: new (self) } # [doc = "Bit 16 - This bit sets the value of the pin configured as DIO10 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout11_8_dio10 (& mut self) -> DOUT11_8_DIO10_W < DOUT11_8_SPEC , 16 > { DOUT11_8_DIO10_W :: new (self) } # [doc = "Bit 24 - This bit sets the value of the pin configured as DIO11 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout11_8_dio11 (& mut self) -> DOUT11_8_DIO11_W < DOUT11_8_SPEC , 24 > { DOUT11_8_DIO11_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "Data output 11 to 8\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`dout11_8::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct DOUT11_8_SPEC ; impl crate :: RegisterSpec for DOUT11_8_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`dout11_8::W`](W) writer structure"] impl crate :: Writable for DOUT11_8_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets DOUT11_8 to value 0"] impl crate :: Resettable for DOUT11_8_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }