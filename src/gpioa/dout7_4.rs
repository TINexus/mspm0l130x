# [doc = "Register `DOUT7_4` writer"] pub type W = crate :: W < DOUT7_4_SPEC > ; # [doc = "This bit sets the value of the pin configured as DIO4 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT7_4_DIO4_AW { # [doc = "0: ZERO"] DOUT7_4_DIO4_ZERO = 0 , # [doc = "1: ONE"] DOUT7_4_DIO4_ONE = 1 , } impl From < DOUT7_4_DIO4_AW > for bool { # [inline (always)] fn from (variant : DOUT7_4_DIO4_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT7_4_DIO4` writer - This bit sets the value of the pin configured as DIO4 when the output is enabled through DOE31_0 register."] pub type DOUT7_4_DIO4_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT7_4_DIO4_AW > ; impl < 'a , REG , const O : u8 > DOUT7_4_DIO4_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout7_4_dio4_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT7_4_DIO4_AW :: DOUT7_4_DIO4_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout7_4_dio4_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT7_4_DIO4_AW :: DOUT7_4_DIO4_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO5 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT7_4_DIO5_AW { # [doc = "0: ZERO"] DOUT7_4_DIO5_ZERO = 0 , # [doc = "1: ONE"] DOUT7_4_DIO5_ONE = 1 , } impl From < DOUT7_4_DIO5_AW > for bool { # [inline (always)] fn from (variant : DOUT7_4_DIO5_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT7_4_DIO5` writer - This bit sets the value of the pin configured as DIO5 when the output is enabled through DOE31_0 register."] pub type DOUT7_4_DIO5_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT7_4_DIO5_AW > ; impl < 'a , REG , const O : u8 > DOUT7_4_DIO5_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout7_4_dio5_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT7_4_DIO5_AW :: DOUT7_4_DIO5_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout7_4_dio5_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT7_4_DIO5_AW :: DOUT7_4_DIO5_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO6 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT7_4_DIO6_AW { # [doc = "0: ZERO"] DOUT7_4_DIO6_ZERO = 0 , # [doc = "1: ONE"] DOUT7_4_DIO6_ONE = 1 , } impl From < DOUT7_4_DIO6_AW > for bool { # [inline (always)] fn from (variant : DOUT7_4_DIO6_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT7_4_DIO6` writer - This bit sets the value of the pin configured as DIO6 when the output is enabled through DOE31_0 register."] pub type DOUT7_4_DIO6_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT7_4_DIO6_AW > ; impl < 'a , REG , const O : u8 > DOUT7_4_DIO6_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout7_4_dio6_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT7_4_DIO6_AW :: DOUT7_4_DIO6_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout7_4_dio6_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT7_4_DIO6_AW :: DOUT7_4_DIO6_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO7 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT7_4_DIO7_AW { # [doc = "0: ZERO"] DOUT7_4_DIO7_ZERO = 0 , # [doc = "1: ONE"] DOUT7_4_DIO7_ONE = 1 , } impl From < DOUT7_4_DIO7_AW > for bool { # [inline (always)] fn from (variant : DOUT7_4_DIO7_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT7_4_DIO7` writer - This bit sets the value of the pin configured as DIO7 when the output is enabled through DOE31_0 register."] pub type DOUT7_4_DIO7_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT7_4_DIO7_AW > ; impl < 'a , REG , const O : u8 > DOUT7_4_DIO7_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout7_4_dio7_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT7_4_DIO7_AW :: DOUT7_4_DIO7_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout7_4_dio7_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT7_4_DIO7_AW :: DOUT7_4_DIO7_ONE) } } impl W { # [doc = "Bit 0 - This bit sets the value of the pin configured as DIO4 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout7_4_dio4 (& mut self) -> DOUT7_4_DIO4_W < DOUT7_4_SPEC , 0 > { DOUT7_4_DIO4_W :: new (self) } # [doc = "Bit 8 - This bit sets the value of the pin configured as DIO5 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout7_4_dio5 (& mut self) -> DOUT7_4_DIO5_W < DOUT7_4_SPEC , 8 > { DOUT7_4_DIO5_W :: new (self) } # [doc = "Bit 16 - This bit sets the value of the pin configured as DIO6 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout7_4_dio6 (& mut self) -> DOUT7_4_DIO6_W < DOUT7_4_SPEC , 16 > { DOUT7_4_DIO6_W :: new (self) } # [doc = "Bit 24 - This bit sets the value of the pin configured as DIO7 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout7_4_dio7 (& mut self) -> DOUT7_4_DIO7_W < DOUT7_4_SPEC , 24 > { DOUT7_4_DIO7_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "Data output 7 to 4\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`dout7_4::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct DOUT7_4_SPEC ; impl crate :: RegisterSpec for DOUT7_4_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`dout7_4::W`](W) writer structure"] impl crate :: Writable for DOUT7_4_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets DOUT7_4 to value 0"] impl crate :: Resettable for DOUT7_4_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }