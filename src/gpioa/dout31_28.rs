# [doc = "Register `DOUT31_28` writer"] pub type W = crate :: W < DOUT31_28_SPEC > ; # [doc = "This bit sets the value of the pin configured as DIO28 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT31_28_DIO28_AW { # [doc = "0: ZERO"] DOUT31_28_DIO28_ZERO = 0 , # [doc = "1: ONE"] DOUT31_28_DIO28_ONE = 1 , } impl From < DOUT31_28_DIO28_AW > for bool { # [inline (always)] fn from (variant : DOUT31_28_DIO28_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT31_28_DIO28` writer - This bit sets the value of the pin configured as DIO28 when the output is enabled through DOE31_0 register."] pub type DOUT31_28_DIO28_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT31_28_DIO28_AW > ; impl < 'a , REG , const O : u8 > DOUT31_28_DIO28_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout31_28_dio28_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT31_28_DIO28_AW :: DOUT31_28_DIO28_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout31_28_dio28_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT31_28_DIO28_AW :: DOUT31_28_DIO28_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO29 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT31_28_DIO29_AW { # [doc = "0: ZERO"] DOUT31_28_DIO29_ZERO = 0 , # [doc = "1: ONE"] DOUT31_28_DIO29_ONE = 1 , } impl From < DOUT31_28_DIO29_AW > for bool { # [inline (always)] fn from (variant : DOUT31_28_DIO29_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT31_28_DIO29` writer - This bit sets the value of the pin configured as DIO29 when the output is enabled through DOE31_0 register."] pub type DOUT31_28_DIO29_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT31_28_DIO29_AW > ; impl < 'a , REG , const O : u8 > DOUT31_28_DIO29_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout31_28_dio29_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT31_28_DIO29_AW :: DOUT31_28_DIO29_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout31_28_dio29_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT31_28_DIO29_AW :: DOUT31_28_DIO29_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO30 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT31_28_DIO30_AW { # [doc = "0: ZERO"] DOUT31_28_DIO30_ZERO = 0 , # [doc = "1: ONE"] DOUT31_28_DIO30_ONE = 1 , } impl From < DOUT31_28_DIO30_AW > for bool { # [inline (always)] fn from (variant : DOUT31_28_DIO30_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT31_28_DIO30` writer - This bit sets the value of the pin configured as DIO30 when the output is enabled through DOE31_0 register."] pub type DOUT31_28_DIO30_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT31_28_DIO30_AW > ; impl < 'a , REG , const O : u8 > DOUT31_28_DIO30_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout31_28_dio30_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT31_28_DIO30_AW :: DOUT31_28_DIO30_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout31_28_dio30_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT31_28_DIO30_AW :: DOUT31_28_DIO30_ONE) } } # [doc = "This bit sets the value of the pin configured as DIO31 when the output is enabled through DOE31_0 register.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum DOUT31_28_DIO31_AW { # [doc = "0: ZERO"] DOUT31_28_DIO31_ZERO = 0 , # [doc = "1: ONE"] DOUT31_28_DIO31_ONE = 1 , } impl From < DOUT31_28_DIO31_AW > for bool { # [inline (always)] fn from (variant : DOUT31_28_DIO31_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `DOUT31_28_DIO31` writer - This bit sets the value of the pin configured as DIO31 when the output is enabled through DOE31_0 register."] pub type DOUT31_28_DIO31_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , DOUT31_28_DIO31_AW > ; impl < 'a , REG , const O : u8 > DOUT31_28_DIO31_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "ZERO"] # [inline (always)] pub fn dout31_28_dio31_zero (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT31_28_DIO31_AW :: DOUT31_28_DIO31_ZERO) } # [doc = "ONE"] # [inline (always)] pub fn dout31_28_dio31_one (self) -> & 'a mut crate :: W < REG > { self . variant (DOUT31_28_DIO31_AW :: DOUT31_28_DIO31_ONE) } } impl W { # [doc = "Bit 0 - This bit sets the value of the pin configured as DIO28 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout31_28_dio28 (& mut self) -> DOUT31_28_DIO28_W < DOUT31_28_SPEC , 0 > { DOUT31_28_DIO28_W :: new (self) } # [doc = "Bit 8 - This bit sets the value of the pin configured as DIO29 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout31_28_dio29 (& mut self) -> DOUT31_28_DIO29_W < DOUT31_28_SPEC , 8 > { DOUT31_28_DIO29_W :: new (self) } # [doc = "Bit 16 - This bit sets the value of the pin configured as DIO30 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout31_28_dio30 (& mut self) -> DOUT31_28_DIO30_W < DOUT31_28_SPEC , 16 > { DOUT31_28_DIO30_W :: new (self) } # [doc = "Bit 24 - This bit sets the value of the pin configured as DIO31 when the output is enabled through DOE31_0 register."] # [inline (always)] # [must_use] pub fn dout31_28_dio31 (& mut self) -> DOUT31_28_DIO31_W < DOUT31_28_SPEC , 24 > { DOUT31_28_DIO31_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "Data output 31 to 28\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`dout31_28::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct DOUT31_28_SPEC ; impl crate :: RegisterSpec for DOUT31_28_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`dout31_28::W`](W) writer structure"] impl crate :: Writable for DOUT31_28_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets DOUT31_28 to value 0"] impl crate :: Resettable for DOUT31_28_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }