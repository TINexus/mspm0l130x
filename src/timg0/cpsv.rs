# [doc = "Register `CPSV` reader"] pub type R = crate :: R < CPSV_SPEC > ; # [doc = "Field `CPSV_CPSVAL` reader - Current Prescale Count Value"] pub type CPSV_CPSVAL_R = crate :: FieldReader ; impl R { # [doc = "Bits 0:7 - Current Prescale Count Value"] # [inline (always)] pub fn cpsv_cpsval (& self) -> CPSV_CPSVAL_R { CPSV_CPSVAL_R :: new ((self . bits & 0xff) as u8) } } # [doc = "Clock prescale count status register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cpsv::R`](R).  See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct CPSV_SPEC ; impl crate :: RegisterSpec for CPSV_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [`cpsv::R`](R) reader structure"] impl crate :: Readable for CPSV_SPEC { } # [doc = "`reset()` method sets CPSV to value 0"] impl crate :: Resettable for CPSV_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }