# [doc = "Register `ISET` writer"] pub type W = crate :: W < ISET_SPEC > ; # [doc = "Sets TXIFG in RIS register\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum ISET_TXIFG_AW { # [doc = "0: NO_EFFECT"] ISET_TXIFG_NO_EFFECT = 0 , # [doc = "1: SET"] ISET_TXIFG_SET = 1 , } impl From < ISET_TXIFG_AW > for bool { # [inline (always)] fn from (variant : ISET_TXIFG_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `ISET_TXIFG` writer - Sets TXIFG in RIS register"] pub type ISET_TXIFG_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , ISET_TXIFG_AW > ; impl < 'a , REG , const O : u8 > ISET_TXIFG_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn iset_txifg_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (ISET_TXIFG_AW :: ISET_TXIFG_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn iset_txifg_set (self) -> & 'a mut crate :: W < REG > { self . variant (ISET_TXIFG_AW :: ISET_TXIFG_SET) } } # [doc = "Sets RXIFG in RIS register\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum ISET_RXIFG_AW { # [doc = "0: NO_EFFECT"] ISET_RXIFG_NO_EFFECT = 0 , # [doc = "1: SET"] ISET_RXIFG_SET = 1 , } impl From < ISET_RXIFG_AW > for bool { # [inline (always)] fn from (variant : ISET_RXIFG_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `ISET_RXIFG` writer - Sets RXIFG in RIS register"] pub type ISET_RXIFG_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , ISET_RXIFG_AW > ; impl < 'a , REG , const O : u8 > ISET_RXIFG_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn iset_rxifg_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (ISET_RXIFG_AW :: ISET_RXIFG_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn iset_rxifg_set (self) -> & 'a mut crate :: W < REG > { self . variant (ISET_RXIFG_AW :: ISET_RXIFG_SET) } } # [doc = "Sets PWRUPIFG in RIS register\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum ISET_PWRUPIFG_AW { # [doc = "0: NO_EFFECT"] ISET_PWRUPIFG_NO_EFFECT = 0 , # [doc = "1: SET"] ISET_PWRUPIFG_SET = 1 , } impl From < ISET_PWRUPIFG_AW > for bool { # [inline (always)] fn from (variant : ISET_PWRUPIFG_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `ISET_PWRUPIFG` writer - Sets PWRUPIFG in RIS register"] pub type ISET_PWRUPIFG_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , ISET_PWRUPIFG_AW > ; impl < 'a , REG , const O : u8 > ISET_PWRUPIFG_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn iset_pwrupifg_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (ISET_PWRUPIFG_AW :: ISET_PWRUPIFG_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn iset_pwrupifg_set (self) -> & 'a mut crate :: W < REG > { self . variant (ISET_PWRUPIFG_AW :: ISET_PWRUPIFG_SET) } } # [doc = "Sets PWRDWNIFG in RIS register\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum ISET_PWRDWNIFG_AW { # [doc = "0: NO_EFFECT"] ISET_PWRDWNIFG_NO_EFFECT = 0 , # [doc = "1: SET"] ISET_PWRDWNIFG_SET = 1 , } impl From < ISET_PWRDWNIFG_AW > for bool { # [inline (always)] fn from (variant : ISET_PWRDWNIFG_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `ISET_PWRDWNIFG` writer - Sets PWRDWNIFG in RIS register"] pub type ISET_PWRDWNIFG_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , ISET_PWRDWNIFG_AW > ; impl < 'a , REG , const O : u8 > ISET_PWRDWNIFG_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn iset_pwrdwnifg_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (ISET_PWRDWNIFG_AW :: ISET_PWRDWNIFG_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn iset_pwrdwnifg_set (self) -> & 'a mut crate :: W < REG > { self . variant (ISET_PWRDWNIFG_AW :: ISET_PWRDWNIFG_SET) } } impl W { # [doc = "Bit 0 - Sets TXIFG in RIS register"] # [inline (always)] # [must_use] pub fn iset_txifg (& mut self) -> ISET_TXIFG_W < ISET_SPEC , 0 > { ISET_TXIFG_W :: new (self) } # [doc = "Bit 1 - Sets RXIFG in RIS register"] # [inline (always)] # [must_use] pub fn iset_rxifg (& mut self) -> ISET_RXIFG_W < ISET_SPEC , 1 > { ISET_RXIFG_W :: new (self) } # [doc = "Bit 2 - Sets PWRUPIFG in RIS register"] # [inline (always)] # [must_use] pub fn iset_pwrupifg (& mut self) -> ISET_PWRUPIFG_W < ISET_SPEC , 2 > { ISET_PWRUPIFG_W :: new (self) } # [doc = "Bit 3 - Sets PWRDWNIFG in RIS register"] # [inline (always)] # [must_use] pub fn iset_pwrdwnifg (& mut self) -> ISET_PWRDWNIFG_W < ISET_SPEC , 3 > { ISET_PWRDWNIFG_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "Interrupt set\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`iset::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct ISET_SPEC ; impl crate :: RegisterSpec for ISET_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`iset::W`](W) writer structure"] impl crate :: Writable for ISET_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets ISET to value 0"] impl crate :: Resettable for ISET_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }