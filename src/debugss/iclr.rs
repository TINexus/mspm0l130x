# [doc = "Register `ICLR` writer"] pub type W = crate :: W < ICLR_SPEC > ; # [doc = "Clears TXIFG in RIS register\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum ICLR_TXIFG_AW { # [doc = "0: NO_EFFECT"] ICLR_TXIFG_NO_EFFECT = 0 , # [doc = "1: CLR"] ICLR_TXIFG_CLR = 1 , } impl From < ICLR_TXIFG_AW > for bool { # [inline (always)] fn from (variant : ICLR_TXIFG_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `ICLR_TXIFG` writer - Clears TXIFG in RIS register"] pub type ICLR_TXIFG_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , ICLR_TXIFG_AW > ; impl < 'a , REG , const O : u8 > ICLR_TXIFG_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn iclr_txifg_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (ICLR_TXIFG_AW :: ICLR_TXIFG_NO_EFFECT) } # [doc = "CLR"] # [inline (always)] pub fn iclr_txifg_clr (self) -> & 'a mut crate :: W < REG > { self . variant (ICLR_TXIFG_AW :: ICLR_TXIFG_CLR) } } # [doc = "Clears RXIFG in RIS register\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum ICLR_RXIFG_AW { # [doc = "0: NO_EFFECT"] ICLR_RXIFG_NO_EFFECT = 0 , # [doc = "1: CLR"] ICLR_RXIFG_CLR = 1 , } impl From < ICLR_RXIFG_AW > for bool { # [inline (always)] fn from (variant : ICLR_RXIFG_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `ICLR_RXIFG` writer - Clears RXIFG in RIS register"] pub type ICLR_RXIFG_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , ICLR_RXIFG_AW > ; impl < 'a , REG , const O : u8 > ICLR_RXIFG_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn iclr_rxifg_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (ICLR_RXIFG_AW :: ICLR_RXIFG_NO_EFFECT) } # [doc = "CLR"] # [inline (always)] pub fn iclr_rxifg_clr (self) -> & 'a mut crate :: W < REG > { self . variant (ICLR_RXIFG_AW :: ICLR_RXIFG_CLR) } } # [doc = "Clears PWRUPIFG in RIS register\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum ICLR_PWRUPIFG_AW { # [doc = "0: NO_EFFECT"] ICLR_PWRUPIFG_NO_EFFECT = 0 , # [doc = "1: CLR"] ICLR_PWRUPIFG_CLR = 1 , } impl From < ICLR_PWRUPIFG_AW > for bool { # [inline (always)] fn from (variant : ICLR_PWRUPIFG_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `ICLR_PWRUPIFG` writer - Clears PWRUPIFG in RIS register"] pub type ICLR_PWRUPIFG_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , ICLR_PWRUPIFG_AW > ; impl < 'a , REG , const O : u8 > ICLR_PWRUPIFG_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn iclr_pwrupifg_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (ICLR_PWRUPIFG_AW :: ICLR_PWRUPIFG_NO_EFFECT) } # [doc = "CLR"] # [inline (always)] pub fn iclr_pwrupifg_clr (self) -> & 'a mut crate :: W < REG > { self . variant (ICLR_PWRUPIFG_AW :: ICLR_PWRUPIFG_CLR) } } # [doc = "Clears PWRDWNIFG in RIS register\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum ICLR_PWRDWNIFG_AW { # [doc = "0: NO_EFFECT"] ICLR_PWRDWNIFG_NO_EFFECT = 0 , # [doc = "1: CLR"] ICLR_PWRDWNIFG_CLR = 1 , } impl From < ICLR_PWRDWNIFG_AW > for bool { # [inline (always)] fn from (variant : ICLR_PWRDWNIFG_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `ICLR_PWRDWNIFG` writer - Clears PWRDWNIFG in RIS register"] pub type ICLR_PWRDWNIFG_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , ICLR_PWRDWNIFG_AW > ; impl < 'a , REG , const O : u8 > ICLR_PWRDWNIFG_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn iclr_pwrdwnifg_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (ICLR_PWRDWNIFG_AW :: ICLR_PWRDWNIFG_NO_EFFECT) } # [doc = "CLR"] # [inline (always)] pub fn iclr_pwrdwnifg_clr (self) -> & 'a mut crate :: W < REG > { self . variant (ICLR_PWRDWNIFG_AW :: ICLR_PWRDWNIFG_CLR) } } impl W { # [doc = "Bit 0 - Clears TXIFG in RIS register"] # [inline (always)] # [must_use] pub fn iclr_txifg (& mut self) -> ICLR_TXIFG_W < ICLR_SPEC , 0 > { ICLR_TXIFG_W :: new (self) } # [doc = "Bit 1 - Clears RXIFG in RIS register"] # [inline (always)] # [must_use] pub fn iclr_rxifg (& mut self) -> ICLR_RXIFG_W < ICLR_SPEC , 1 > { ICLR_RXIFG_W :: new (self) } # [doc = "Bit 2 - Clears PWRUPIFG in RIS register"] # [inline (always)] # [must_use] pub fn iclr_pwrupifg (& mut self) -> ICLR_PWRUPIFG_W < ICLR_SPEC , 2 > { ICLR_PWRUPIFG_W :: new (self) } # [doc = "Bit 3 - Clears PWRDWNIFG in RIS register"] # [inline (always)] # [must_use] pub fn iclr_pwrdwnifg (& mut self) -> ICLR_PWRDWNIFG_W < ICLR_SPEC , 3 > { ICLR_PWRDWNIFG_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "Interrupt clear\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`iclr::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct ICLR_SPEC ; impl crate :: RegisterSpec for ICLR_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`iclr::W`](W) writer structure"] impl crate :: Writable for ICLR_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets ICLR to value 0"] impl crate :: Resettable for ICLR_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }