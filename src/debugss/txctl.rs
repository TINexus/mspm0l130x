# [doc = "Register `TXCTL` reader"] pub type R = crate :: R < TXCTL_SPEC > ; # [doc = "Field `TXCTL_TRANSMIT` reader - Indicates data request in DSSM.TXD, set on write via Debug AP to DSSM.TXD. A read of the DSSM.TXD register by SW will clear the TX field. The tool can check that TXD is empty by reading this field."] pub type TXCTL_TRANSMIT_R = crate :: BitReader < TXCTL_TRANSMIT_A > ; # [doc = "Indicates data request in DSSM.TXD, set on write via Debug AP to DSSM.TXD. A read of the DSSM.TXD register by SW will clear the TX field. The tool can check that TXD is empty by reading this field.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum TXCTL_TRANSMIT_A { # [doc = "0: EMPTY"] TXCTL_TRANSMIT_EMPTY = 0 , # [doc = "1: FULL"] TXCTL_TRANSMIT_FULL = 1 , } impl From < TXCTL_TRANSMIT_A > for bool { # [inline (always)] fn from (variant : TXCTL_TRANSMIT_A) -> Self { variant as u8 != 0 } } impl TXCTL_TRANSMIT_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> TXCTL_TRANSMIT_A { match self . bits { false => TXCTL_TRANSMIT_A :: TXCTL_TRANSMIT_EMPTY , true => TXCTL_TRANSMIT_A :: TXCTL_TRANSMIT_FULL , } } # [doc = "EMPTY"] # [inline (always)] pub fn is_txctl_transmit_empty (& self) -> bool { * self == TXCTL_TRANSMIT_A :: TXCTL_TRANSMIT_EMPTY } # [doc = "FULL"] # [inline (always)] pub fn is_txctl_transmit_full (& self) -> bool { * self == TXCTL_TRANSMIT_A :: TXCTL_TRANSMIT_FULL } } # [doc = "Field `TXCTL_TRANSMIT_FLAGS` reader - Generic TX flags that can be set by external debug tool. Functionality is defined by SW."] pub type TXCTL_TRANSMIT_FLAGS_R = crate :: FieldReader < u32 > ; impl R { # [doc = "Bit 0 - Indicates data request in DSSM.TXD, set on write via Debug AP to DSSM.TXD. A read of the DSSM.TXD register by SW will clear the TX field. The tool can check that TXD is empty by reading this field."] # [inline (always)] pub fn txctl_transmit (& self) -> TXCTL_TRANSMIT_R { TXCTL_TRANSMIT_R :: new ((self . bits & 1) != 0) } # [doc = "Bits 1:31 - Generic TX flags that can be set by external debug tool. Functionality is defined by SW."] # [inline (always)] pub fn txctl_transmit_flags (& self) -> TXCTL_TRANSMIT_FLAGS_R { TXCTL_TRANSMIT_FLAGS_R :: new ((self . bits >> 1) & 0x7fff_ffff) } } # [doc = "Transmit control register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`txctl::R`](R).  See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct TXCTL_SPEC ; impl crate :: RegisterSpec for TXCTL_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [`txctl::R`](R) reader structure"] impl crate :: Readable for TXCTL_SPEC { } # [doc = "`reset()` method sets TXCTL to value 0"] impl crate :: Resettable for TXCTL_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }