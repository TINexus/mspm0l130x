# [doc = "Register `SYSOSCTRIMUSER` reader"] pub type R = crate :: R < SYSOSCTRIMUSER_SPEC > ; # [doc = "Register `SYSOSCTRIMUSER` writer"] pub type W = crate :: W < SYSOSCTRIMUSER_SPEC > ; # [doc = "Field `SYSOSCTRIMUSER_FREQ` reader - FREQ specifies the target user-trimmed frequency for SYSOSC."] pub type SYSOSCTRIMUSER_FREQ_R = crate :: FieldReader < SYSOSCTRIMUSER_FREQ_A > ; # [doc = "FREQ specifies the target user-trimmed frequency for SYSOSC.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] # [repr (u8)] pub enum SYSOSCTRIMUSER_FREQ_A { # [doc = "1: SYSOSC16M"] SYSOSCTRIMUSER_FREQ_SYSOSC16M = 1 , # [doc = "2: SYSOSC24M"] SYSOSCTRIMUSER_FREQ_SYSOSC24M = 2 , } impl From < SYSOSCTRIMUSER_FREQ_A > for u8 { # [inline (always)] fn from (variant : SYSOSCTRIMUSER_FREQ_A) -> Self { variant as _ } } impl crate :: FieldSpec for SYSOSCTRIMUSER_FREQ_A { type Ux = u8 ; } impl SYSOSCTRIMUSER_FREQ_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> Option < SYSOSCTRIMUSER_FREQ_A > { match self . bits { 1 => Some (SYSOSCTRIMUSER_FREQ_A :: SYSOSCTRIMUSER_FREQ_SYSOSC16M) , 2 => Some (SYSOSCTRIMUSER_FREQ_A :: SYSOSCTRIMUSER_FREQ_SYSOSC24M) , _ => None , } } # [doc = "SYSOSC16M"] # [inline (always)] pub fn is_sysosctrimuser_freq_sysosc16m (& self) -> bool { * self == SYSOSCTRIMUSER_FREQ_A :: SYSOSCTRIMUSER_FREQ_SYSOSC16M } # [doc = "SYSOSC24M"] # [inline (always)] pub fn is_sysosctrimuser_freq_sysosc24m (& self) -> bool { * self == SYSOSCTRIMUSER_FREQ_A :: SYSOSCTRIMUSER_FREQ_SYSOSC24M } } # [doc = "Field `SYSOSCTRIMUSER_FREQ` writer - FREQ specifies the target user-trimmed frequency for SYSOSC."] pub type SYSOSCTRIMUSER_FREQ_W < 'a , REG , const O : u8 > = crate :: FieldWriter < 'a , REG , 2 , O , SYSOSCTRIMUSER_FREQ_A > ; impl < 'a , REG , const O : u8 > SYSOSCTRIMUSER_FREQ_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , REG :: Ux : From < u8 > { # [doc = "SYSOSC16M"] # [inline (always)] pub fn sysosctrimuser_freq_sysosc16m (self) -> & 'a mut crate :: W < REG > { self . variant (SYSOSCTRIMUSER_FREQ_A :: SYSOSCTRIMUSER_FREQ_SYSOSC16M) } # [doc = "SYSOSC24M"] # [inline (always)] pub fn sysosctrimuser_freq_sysosc24m (self) -> & 'a mut crate :: W < REG > { self . variant (SYSOSCTRIMUSER_FREQ_A :: SYSOSCTRIMUSER_FREQ_SYSOSC24M) } } # [doc = "Field `SYSOSCTRIMUSER_CAP` reader - CAP specifies the SYSOSC capacitor trim. This value changes with the target frequency."] pub type SYSOSCTRIMUSER_CAP_R = crate :: FieldReader ; # [doc = "Field `SYSOSCTRIMUSER_CAP` writer - CAP specifies the SYSOSC capacitor trim. This value changes with the target frequency."] pub type SYSOSCTRIMUSER_CAP_W < 'a , REG , const O : u8 > = crate :: FieldWriter < 'a , REG , 3 , O > ; # [doc = "Field `SYSOSCTRIMUSER_RESCOARSE` reader - RESCOARSE specifies the resister coarse trim. This value changes with the target frequency."] pub type SYSOSCTRIMUSER_RESCOARSE_R = crate :: FieldReader ; # [doc = "Field `SYSOSCTRIMUSER_RESCOARSE` writer - RESCOARSE specifies the resister coarse trim. This value changes with the target frequency."] pub type SYSOSCTRIMUSER_RESCOARSE_W < 'a , REG , const O : u8 > = crate :: FieldWriter < 'a , REG , 6 , O > ; # [doc = "Field `SYSOSCTRIMUSER_RESFINE` reader - RESFINE specifies the resister fine trim. This value changes with the target frequency."] pub type SYSOSCTRIMUSER_RESFINE_R = crate :: FieldReader ; # [doc = "Field `SYSOSCTRIMUSER_RESFINE` writer - RESFINE specifies the resister fine trim. This value changes with the target frequency."] pub type SYSOSCTRIMUSER_RESFINE_W < 'a , REG , const O : u8 > = crate :: FieldWriter < 'a , REG , 4 , O > ; # [doc = "Field `SYSOSCTRIMUSER_RDIV` reader - RDIV specifies the frequency correction loop (FCL) resistor trim. This value changes with the target frequency."] pub type SYSOSCTRIMUSER_RDIV_R = crate :: FieldReader < u16 > ; # [doc = "Field `SYSOSCTRIMUSER_RDIV` writer - RDIV specifies the frequency correction loop (FCL) resistor trim. This value changes with the target frequency."] pub type SYSOSCTRIMUSER_RDIV_W < 'a , REG , const O : u8 > = crate :: FieldWriter < 'a , REG , 9 , O , u16 > ; impl R { # [doc = "Bits 0:1 - FREQ specifies the target user-trimmed frequency for SYSOSC."] # [inline (always)] pub fn sysosctrimuser_freq (& self) -> SYSOSCTRIMUSER_FREQ_R { SYSOSCTRIMUSER_FREQ_R :: new ((self . bits & 3) as u8) } # [doc = "Bits 4:6 - CAP specifies the SYSOSC capacitor trim. This value changes with the target frequency."] # [inline (always)] pub fn sysosctrimuser_cap (& self) -> SYSOSCTRIMUSER_CAP_R { SYSOSCTRIMUSER_CAP_R :: new (((self . bits >> 4) & 7) as u8) } # [doc = "Bits 8:13 - RESCOARSE specifies the resister coarse trim. This value changes with the target frequency."] # [inline (always)] pub fn sysosctrimuser_rescoarse (& self) -> SYSOSCTRIMUSER_RESCOARSE_R { SYSOSCTRIMUSER_RESCOARSE_R :: new (((self . bits >> 8) & 0x3f) as u8) } # [doc = "Bits 16:19 - RESFINE specifies the resister fine trim. This value changes with the target frequency."] # [inline (always)] pub fn sysosctrimuser_resfine (& self) -> SYSOSCTRIMUSER_RESFINE_R { SYSOSCTRIMUSER_RESFINE_R :: new (((self . bits >> 16) & 0x0f) as u8) } # [doc = "Bits 20:28 - RDIV specifies the frequency correction loop (FCL) resistor trim. This value changes with the target frequency."] # [inline (always)] pub fn sysosctrimuser_rdiv (& self) -> SYSOSCTRIMUSER_RDIV_R { SYSOSCTRIMUSER_RDIV_R :: new (((self . bits >> 20) & 0x01ff) as u16) } } impl W { # [doc = "Bits 0:1 - FREQ specifies the target user-trimmed frequency for SYSOSC."] # [inline (always)] # [must_use] pub fn sysosctrimuser_freq (& mut self) -> SYSOSCTRIMUSER_FREQ_W < SYSOSCTRIMUSER_SPEC , 0 > { SYSOSCTRIMUSER_FREQ_W :: new (self) } # [doc = "Bits 4:6 - CAP specifies the SYSOSC capacitor trim. This value changes with the target frequency."] # [inline (always)] # [must_use] pub fn sysosctrimuser_cap (& mut self) -> SYSOSCTRIMUSER_CAP_W < SYSOSCTRIMUSER_SPEC , 4 > { SYSOSCTRIMUSER_CAP_W :: new (self) } # [doc = "Bits 8:13 - RESCOARSE specifies the resister coarse trim. This value changes with the target frequency."] # [inline (always)] # [must_use] pub fn sysosctrimuser_rescoarse (& mut self) -> SYSOSCTRIMUSER_RESCOARSE_W < SYSOSCTRIMUSER_SPEC , 8 > { SYSOSCTRIMUSER_RESCOARSE_W :: new (self) } # [doc = "Bits 16:19 - RESFINE specifies the resister fine trim. This value changes with the target frequency."] # [inline (always)] # [must_use] pub fn sysosctrimuser_resfine (& mut self) -> SYSOSCTRIMUSER_RESFINE_W < SYSOSCTRIMUSER_SPEC , 16 > { SYSOSCTRIMUSER_RESFINE_W :: new (self) } # [doc = "Bits 20:28 - RDIV specifies the frequency correction loop (FCL) resistor trim. This value changes with the target frequency."] # [inline (always)] # [must_use] pub fn sysosctrimuser_rdiv (& mut self) -> SYSOSCTRIMUSER_RDIV_W < SYSOSCTRIMUSER_SPEC , 20 > { SYSOSCTRIMUSER_RDIV_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "SYSOSC user-specified trim\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`sysosctrimuser::R`](R).  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`sysosctrimuser::W`](W). You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct SYSOSCTRIMUSER_SPEC ; impl crate :: RegisterSpec for SYSOSCTRIMUSER_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [`sysosctrimuser::R`](R) reader structure"] impl crate :: Readable for SYSOSCTRIMUSER_SPEC { } # [doc = "`write(|w| ..)` method takes [`sysosctrimuser::W`](W) writer structure"] impl crate :: Writable for SYSOSCTRIMUSER_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets SYSOSCTRIMUSER to value 0"] impl crate :: Resettable for SYSOSCTRIMUSER_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }