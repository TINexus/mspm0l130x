# [doc = "Register `NMIISET` writer"] pub type W = crate :: W < NMIISET_SPEC > ; # [doc = "Set the BORLVL NMI\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum NMIISET_BORLVL_AW { # [doc = "0: NO_EFFECT"] NMIISET_BORLVL_NO_EFFECT = 0 , # [doc = "1: SET"] NMIISET_BORLVL_SET = 1 , } impl From < NMIISET_BORLVL_AW > for bool { # [inline (always)] fn from (variant : NMIISET_BORLVL_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `NMIISET_BORLVL` writer - Set the BORLVL NMI"] pub type NMIISET_BORLVL_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , NMIISET_BORLVL_AW > ; impl < 'a , REG , const O : u8 > NMIISET_BORLVL_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn nmiiset_borlvl_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (NMIISET_BORLVL_AW :: NMIISET_BORLVL_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn nmiiset_borlvl_set (self) -> & 'a mut crate :: W < REG > { self . variant (NMIISET_BORLVL_AW :: NMIISET_BORLVL_SET) } } # [doc = "Watch Dog 0 Fault\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum NMIISET_WWDT0_AW { # [doc = "0: NO_EFFECT"] NMIISET_WWDT0_NO_EFFECT = 0 , # [doc = "1: SET"] NMIISET_WWDT0_SET = 1 , } impl From < NMIISET_WWDT0_AW > for bool { # [inline (always)] fn from (variant : NMIISET_WWDT0_AW) -> Self { variant as u8 != 0 } } # [doc = "Field `NMIISET_WWDT0` writer - Watch Dog 0 Fault"] pub type NMIISET_WWDT0_W < 'a , REG , const O : u8 > = crate :: BitWriter < 'a , REG , O , NMIISET_WWDT0_AW > ; impl < 'a , REG , const O : u8 > NMIISET_WWDT0_W < 'a , REG , O > where REG : crate :: Writable + crate :: RegisterSpec , { # [doc = "NO_EFFECT"] # [inline (always)] pub fn nmiiset_wwdt0_no_effect (self) -> & 'a mut crate :: W < REG > { self . variant (NMIISET_WWDT0_AW :: NMIISET_WWDT0_NO_EFFECT) } # [doc = "SET"] # [inline (always)] pub fn nmiiset_wwdt0_set (self) -> & 'a mut crate :: W < REG > { self . variant (NMIISET_WWDT0_AW :: NMIISET_WWDT0_SET) } } impl W { # [doc = "Bit 0 - Set the BORLVL NMI"] # [inline (always)] # [must_use] pub fn nmiiset_borlvl (& mut self) -> NMIISET_BORLVL_W < NMIISET_SPEC , 0 > { NMIISET_BORLVL_W :: new (self) } # [doc = "Bit 1 - Watch Dog 0 Fault"] # [inline (always)] # [must_use] pub fn nmiiset_wwdt0 (& mut self) -> NMIISET_WWDT0_W < NMIISET_SPEC , 1 > { NMIISET_WWDT0_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "NMI interrupt set\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`nmiiset::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct NMIISET_SPEC ; impl crate :: RegisterSpec for NMIISET_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`nmiiset::W`](W) writer structure"] impl crate :: Writable for NMIISET_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets NMIISET to value 0"] impl crate :: Resettable for NMIISET_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }