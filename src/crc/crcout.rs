# [doc = "Register `CRCOUT` reader"] pub type R = crate :: R < CRCOUT_SPEC > ; # [doc = "Field `CRCOUT_RESULT` reader - Result"] pub type CRCOUT_RESULT_R = crate :: FieldReader < u32 > ; impl R { # [doc = "Bits 0:31 - Result"] # [inline (always)] pub fn crcout_result (& self) -> CRCOUT_RESULT_R { CRCOUT_RESULT_R :: new (self . bits) } } # [doc = "CRC Output Result Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`crcout::R`](R).  See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct CRCOUT_SPEC ; impl crate :: RegisterSpec for CRCOUT_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [`crcout::R`](R) reader structure"] impl crate :: Readable for CRCOUT_SPEC { } # [doc = "`reset()` method sets CRCOUT to value 0"] impl crate :: Resettable for CRCOUT_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }