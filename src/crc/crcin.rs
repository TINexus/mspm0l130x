# [doc = "Register `CRCIN` writer"] pub type W = crate :: W < CRCIN_SPEC > ; # [doc = "Field `CRCIN_DATA` writer - Input Data"] pub type CRCIN_DATA_W < 'a , REG , const O : u8 > = crate :: FieldWriter < 'a , REG , 32 , O , u32 > ; impl W { # [doc = "Bits 0:31 - Input Data"] # [inline (always)] # [must_use] pub fn crcin_data (& mut self) -> CRCIN_DATA_W < CRCIN_SPEC , 0 > { CRCIN_DATA_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "CRC Input Data Register\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`crcin::W`](W). See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct CRCIN_SPEC ; impl crate :: RegisterSpec for CRCIN_SPEC { type Ux = u32 ; } # [doc = "`write(|w| ..)` method takes [`crcin::W`](W) writer structure"] impl crate :: Writable for CRCIN_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets CRCIN to value 0"] impl crate :: Resettable for CRCIN_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }