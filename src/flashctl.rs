# [doc = r"Register block"] # [repr (C)] pub struct RegisterBlock { _reserved0 : [u8 ; 0x1020] , # [doc = "0x1020 - Interrupt Index Register"] pub iidx : IIDX , _reserved1 : [u8 ; 0x04] , # [doc = "0x1028 - Interrupt Mask Register"] pub imask : IMASK , _reserved2 : [u8 ; 0x04] , # [doc = "0x1030 - Raw Interrupt Status Register"] pub ris : RIS , _reserved3 : [u8 ; 0x04] , # [doc = "0x1038 - Masked Interrupt Status Register"] pub mis : MIS , _reserved4 : [u8 ; 0x04] , # [doc = "0x1040 - Interrupt Set Register"] pub iset : ISET , _reserved5 : [u8 ; 0x04] , # [doc = "0x1048 - Interrupt Clear Register"] pub iclr : ICLR , _reserved6 : [u8 ; 0x94] , # [doc = "0x10e0 - Event Mode"] pub evt_mode : EVT_MODE , _reserved7 : [u8 ; 0x18] , # [doc = "0x10fc - Hardware Version Description Register"] pub desc : DESC , # [doc = "0x1100 - Command Execute Register"] pub cmdexec : CMDEXEC , # [doc = "0x1104 - Command Type Register"] pub cmdtype : CMDTYPE , # [doc = "0x1108 - Command Control Register"] pub cmdctl : CMDCTL , _reserved11 : [u8 ; 0x14] , # [doc = "0x1120 - Command Address Register"] pub cmdaddr : CMDADDR , # [doc = "0x1124 - Command Program Byte Enable Register"] pub cmdbyten : CMDBYTEN , _reserved13 : [u8 ; 0x08] , # [doc = "0x1130 - Command Data Register 0"] pub cmddata0 : CMDDATA0 , # [doc = "0x1134 - Command Data Register 1"] pub cmddata1 : CMDDATA1 , _reserved15 : [u8 ; 0x98] , # [doc = "0x11d0 - Command Write Erase Protect A Register"] pub cmdweprota : CMDWEPROTA , # [doc = "0x11d4 - Command Write Erase Protect B Register"] pub cmdweprotb : CMDWEPROTB , _reserved17 : [u8 ; 0x38] , # [doc = "0x1210 - Command Write Erase Protect Non-Main Register"] pub cmdweprotnm : CMDWEPROTNM , # [doc = "0x1214 - Command Write Erase Protect Trim Register"] pub cmdweprottr : CMDWEPROTTR , # [doc = "0x1218 - Command Write Erase Protect Engr Register"] pub cmdweproten : CMDWEPROTEN , _reserved20 : [u8 ; 0x0194] , # [doc = "0x13b0 - Command Configuration Register"] pub cfgcmd : CFGCMD , # [doc = "0x13b4 - Pulse Counter Configuration Register"] pub cfgpcnt : CFGPCNT , _reserved22 : [u8 ; 0x18] , # [doc = "0x13d0 - Command Status Register"] pub statcmd : STATCMD , # [doc = "0x13d4 - Address Status Register"] pub stataddr : STATADDR , # [doc = "0x13d8 - Pulse Count Status Register"] pub statpcnt : STATPCNT , # [doc = "0x13dc - Mode Status Register"] pub statmode : STATMODE , _reserved26 : [u8 ; 0x10] , # [doc = "0x13f0 - Global Information Register 0"] pub gblinfo0 : GBLINFO0 , # [doc = "0x13f4 - Global Information Register 1"] pub gblinfo1 : GBLINFO1 , # [doc = "0x13f8 - Global Information Register 2"] pub gblinfo2 : GBLINFO2 , _reserved29 : [u8 ; 0x04] , # [doc = "0x1400 - Bank Information Register 0 for Bank 0"] pub bank0info0 : BANK0INFO0 , # [doc = "0x1404 - Bank Information Register 1 for Bank 0"] pub bank0info1 : BANK0INFO1 , } # [doc = "IIDX (r) register accessor: Interrupt Index Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`iidx::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@iidx`]
module"] pub type IIDX = crate :: Reg < iidx :: IIDX_SPEC > ; # [doc = "Interrupt Index Register"] pub mod iidx ; # [doc = "IMASK (rw) register accessor: Interrupt Mask Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`imask::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`imask::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@imask`]
module"] pub type IMASK = crate :: Reg < imask :: IMASK_SPEC > ; # [doc = "Interrupt Mask Register"] pub mod imask ; # [doc = "RIS (r) register accessor: Raw Interrupt Status Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`ris::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@ris`]
module"] pub type RIS = crate :: Reg < ris :: RIS_SPEC > ; # [doc = "Raw Interrupt Status Register"] pub mod ris ; # [doc = "MIS (r) register accessor: Masked Interrupt Status Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`mis::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@mis`]
module"] pub type MIS = crate :: Reg < mis :: MIS_SPEC > ; # [doc = "Masked Interrupt Status Register"] pub mod mis ; # [doc = "ISET (w) register accessor: Interrupt Set Register\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`iset::W`]. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@iset`]
module"] pub type ISET = crate :: Reg < iset :: ISET_SPEC > ; # [doc = "Interrupt Set Register"] pub mod iset ; # [doc = "ICLR (w) register accessor: Interrupt Clear Register\n\nYou can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`iclr::W`]. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@iclr`]
module"] pub type ICLR = crate :: Reg < iclr :: ICLR_SPEC > ; # [doc = "Interrupt Clear Register"] pub mod iclr ; # [doc = "EVT_MODE (r) register accessor: Event Mode\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`evt_mode::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@evt_mode`]
module"] pub type EVT_MODE = crate :: Reg < evt_mode :: EVT_MODE_SPEC > ; # [doc = "Event Mode"] pub mod evt_mode ; # [doc = "DESC (r) register accessor: Hardware Version Description Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`desc::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@desc`]
module"] pub type DESC = crate :: Reg < desc :: DESC_SPEC > ; # [doc = "Hardware Version Description Register"] pub mod desc ; # [doc = "CMDEXEC (rw) register accessor: Command Execute Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmdexec::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmdexec::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmdexec`]
module"] pub type CMDEXEC = crate :: Reg < cmdexec :: CMDEXEC_SPEC > ; # [doc = "Command Execute Register"] pub mod cmdexec ; # [doc = "CMDTYPE (rw) register accessor: Command Type Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmdtype::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmdtype::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmdtype`]
module"] pub type CMDTYPE = crate :: Reg < cmdtype :: CMDTYPE_SPEC > ; # [doc = "Command Type Register"] pub mod cmdtype ; # [doc = "CMDCTL (rw) register accessor: Command Control Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmdctl::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmdctl::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmdctl`]
module"] pub type CMDCTL = crate :: Reg < cmdctl :: CMDCTL_SPEC > ; # [doc = "Command Control Register"] pub mod cmdctl ; # [doc = "CMDADDR (rw) register accessor: Command Address Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmdaddr::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmdaddr::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmdaddr`]
module"] pub type CMDADDR = crate :: Reg < cmdaddr :: CMDADDR_SPEC > ; # [doc = "Command Address Register"] pub mod cmdaddr ; # [doc = "CMDBYTEN (rw) register accessor: Command Program Byte Enable Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmdbyten::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmdbyten::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmdbyten`]
module"] pub type CMDBYTEN = crate :: Reg < cmdbyten :: CMDBYTEN_SPEC > ; # [doc = "Command Program Byte Enable Register"] pub mod cmdbyten ; # [doc = "CMDDATA0 (rw) register accessor: Command Data Register 0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmddata0::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmddata0::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmddata0`]
module"] pub type CMDDATA0 = crate :: Reg < cmddata0 :: CMDDATA0_SPEC > ; # [doc = "Command Data Register 0"] pub mod cmddata0 ; # [doc = "CMDDATA1 (rw) register accessor: Command Data Register 1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmddata1::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmddata1::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmddata1`]
module"] pub type CMDDATA1 = crate :: Reg < cmddata1 :: CMDDATA1_SPEC > ; # [doc = "Command Data Register 1"] pub mod cmddata1 ; # [doc = "CMDWEPROTA (rw) register accessor: Command Write Erase Protect A Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmdweprota::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmdweprota::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmdweprota`]
module"] pub type CMDWEPROTA = crate :: Reg < cmdweprota :: CMDWEPROTA_SPEC > ; # [doc = "Command Write Erase Protect A Register"] pub mod cmdweprota ; # [doc = "CMDWEPROTB (rw) register accessor: Command Write Erase Protect B Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmdweprotb::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmdweprotb::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmdweprotb`]
module"] pub type CMDWEPROTB = crate :: Reg < cmdweprotb :: CMDWEPROTB_SPEC > ; # [doc = "Command Write Erase Protect B Register"] pub mod cmdweprotb ; # [doc = "CMDWEPROTNM (rw) register accessor: Command Write Erase Protect Non-Main Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmdweprotnm::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmdweprotnm::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmdweprotnm`]
module"] pub type CMDWEPROTNM = crate :: Reg < cmdweprotnm :: CMDWEPROTNM_SPEC > ; # [doc = "Command Write Erase Protect Non-Main Register"] pub mod cmdweprotnm ; # [doc = "CMDWEPROTTR (rw) register accessor: Command Write Erase Protect Trim Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmdweprottr::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmdweprottr::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmdweprottr`]
module"] pub type CMDWEPROTTR = crate :: Reg < cmdweprottr :: CMDWEPROTTR_SPEC > ; # [doc = "Command Write Erase Protect Trim Register"] pub mod cmdweprottr ; # [doc = "CMDWEPROTEN (rw) register accessor: Command Write Erase Protect Engr Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cmdweproten::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cmdweproten::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cmdweproten`]
module"] pub type CMDWEPROTEN = crate :: Reg < cmdweproten :: CMDWEPROTEN_SPEC > ; # [doc = "Command Write Erase Protect Engr Register"] pub mod cmdweproten ; # [doc = "CFGCMD (rw) register accessor: Command Configuration Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cfgcmd::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cfgcmd::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cfgcmd`]
module"] pub type CFGCMD = crate :: Reg < cfgcmd :: CFGCMD_SPEC > ; # [doc = "Command Configuration Register"] pub mod cfgcmd ; # [doc = "CFGPCNT (rw) register accessor: Pulse Counter Configuration Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`cfgpcnt::R`].  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`cfgpcnt::W`]. You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@cfgpcnt`]
module"] pub type CFGPCNT = crate :: Reg < cfgpcnt :: CFGPCNT_SPEC > ; # [doc = "Pulse Counter Configuration Register"] pub mod cfgpcnt ; # [doc = "STATCMD (r) register accessor: Command Status Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`statcmd::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@statcmd`]
module"] pub type STATCMD = crate :: Reg < statcmd :: STATCMD_SPEC > ; # [doc = "Command Status Register"] pub mod statcmd ; # [doc = "STATADDR (r) register accessor: Address Status Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`stataddr::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@stataddr`]
module"] pub type STATADDR = crate :: Reg < stataddr :: STATADDR_SPEC > ; # [doc = "Address Status Register"] pub mod stataddr ; # [doc = "STATPCNT (r) register accessor: Pulse Count Status Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`statpcnt::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@statpcnt`]
module"] pub type STATPCNT = crate :: Reg < statpcnt :: STATPCNT_SPEC > ; # [doc = "Pulse Count Status Register"] pub mod statpcnt ; # [doc = "STATMODE (r) register accessor: Mode Status Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`statmode::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@statmode`]
module"] pub type STATMODE = crate :: Reg < statmode :: STATMODE_SPEC > ; # [doc = "Mode Status Register"] pub mod statmode ; # [doc = "GBLINFO0 (r) register accessor: Global Information Register 0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`gblinfo0::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@gblinfo0`]
module"] pub type GBLINFO0 = crate :: Reg < gblinfo0 :: GBLINFO0_SPEC > ; # [doc = "Global Information Register 0"] pub mod gblinfo0 ; # [doc = "GBLINFO1 (r) register accessor: Global Information Register 1\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`gblinfo1::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@gblinfo1`]
module"] pub type GBLINFO1 = crate :: Reg < gblinfo1 :: GBLINFO1_SPEC > ; # [doc = "Global Information Register 1"] pub mod gblinfo1 ; # [doc = "GBLINFO2 (r) register accessor: Global Information Register 2\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`gblinfo2::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@gblinfo2`]
module"] pub type GBLINFO2 = crate :: Reg < gblinfo2 :: GBLINFO2_SPEC > ; # [doc = "Global Information Register 2"] pub mod gblinfo2 ; # [doc = "BANK0INFO0 (r) register accessor: Bank Information Register 0 for Bank 0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`bank0info0::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@bank0info0`]
module"] pub type BANK0INFO0 = crate :: Reg < bank0info0 :: BANK0INFO0_SPEC > ; # [doc = "Bank Information Register 0 for Bank 0"] pub mod bank0info0 ; # [doc = "BANK0INFO1 (r) register accessor: Bank Information Register 1 for Bank 0\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`bank0info1::R`].  See [API](https://docs.rs/svd2rust/#read--modify--write-api).\n\nFor information about available fields see [`mod@bank0info1`]
module"] pub type BANK0INFO1 = crate :: Reg < bank0info1 :: BANK0INFO1_SPEC > ; # [doc = "Bank Information Register 1 for Bank 0"] pub mod bank0info1 ;