# [doc = "Register `FIFODATA` reader"] pub type R = crate :: R < FIFODATA_SPEC > ; # [doc = "Field `FIFODATA_DATA` reader - Read from this data field returns the ADC sample from FIFO."] pub type FIFODATA_DATA_R = crate :: FieldReader < u32 > ; impl R { # [doc = "Bits 0:31 - Read from this data field returns the ADC sample from FIFO."] # [inline (always)] pub fn fifodata_data (& self) -> FIFODATA_DATA_R { FIFODATA_DATA_R :: new (self . bits) } } # [doc = "FIFO Data Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`fifodata::R`](R).  See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct FIFODATA_SPEC ; impl crate :: RegisterSpec for FIFODATA_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [`fifodata::R`](R) reader structure"] impl crate :: Readable for FIFODATA_SPEC { } # [doc = "`reset()` method sets FIFODATA to value 0"] impl crate :: Resettable for FIFODATA_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }