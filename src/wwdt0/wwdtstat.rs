# [doc = "Register `WWDTSTAT` reader"] pub type R = crate :: R < WWDTSTAT_SPEC > ; # [doc = "Field `WWDTSTAT_RUN` reader - Watchdog running status flag."] pub type WWDTSTAT_RUN_R = crate :: BitReader < WWDTSTAT_RUN_A > ; # [doc = "Watchdog running status flag.\n\nValue on reset: 0"] # [derive (Clone , Copy , Debug , PartialEq , Eq)] pub enum WWDTSTAT_RUN_A { # [doc = "0: OFF"] WWDTSTAT_RUN_OFF = 0 , # [doc = "1: ON"] WWDTSTAT_RUN_ON = 1 , } impl From < WWDTSTAT_RUN_A > for bool { # [inline (always)] fn from (variant : WWDTSTAT_RUN_A) -> Self { variant as u8 != 0 } } impl WWDTSTAT_RUN_R { # [doc = "Get enumerated values variant"] # [inline (always)] pub const fn variant (& self) -> WWDTSTAT_RUN_A { match self . bits { false => WWDTSTAT_RUN_A :: WWDTSTAT_RUN_OFF , true => WWDTSTAT_RUN_A :: WWDTSTAT_RUN_ON , } } # [doc = "OFF"] # [inline (always)] pub fn is_wwdtstat_run_off (& self) -> bool { * self == WWDTSTAT_RUN_A :: WWDTSTAT_RUN_OFF } # [doc = "ON"] # [inline (always)] pub fn is_wwdtstat_run_on (& self) -> bool { * self == WWDTSTAT_RUN_A :: WWDTSTAT_RUN_ON } } impl R { # [doc = "Bit 0 - Watchdog running status flag."] # [inline (always)] pub fn wwdtstat_run (& self) -> WWDTSTAT_RUN_R { WWDTSTAT_RUN_R :: new ((self . bits & 1) != 0) } } # [doc = "Window Watchdog Timer Status Register\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`wwdtstat::R`](R).  See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct WWDTSTAT_SPEC ; impl crate :: RegisterSpec for WWDTSTAT_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [`wwdtstat::R`](R) reader structure"] impl crate :: Readable for WWDTSTAT_SPEC { } # [doc = "`reset()` method sets WWDTSTAT to value 0"] impl crate :: Resettable for WWDTSTAT_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }