# [doc = "Register `CTL2` reader"] pub type R = crate :: R < CTL2_SPEC > ; # [doc = "Register `CTL2` writer"] pub type W = crate :: W < CTL2_SPEC > ; # [doc = "Field `CTL2_SHCYCLE` reader - Sample and hold cycle count"] pub type CTL2_SHCYCLE_R = crate :: FieldReader < u16 > ; # [doc = "Field `CTL2_SHCYCLE` writer - Sample and hold cycle count"] pub type CTL2_SHCYCLE_W < 'a , REG , const O : u8 > = crate :: FieldWriter < 'a , REG , 16 , O , u16 > ; # [doc = "Field `CTL2_HCYCLE` reader - Hold cycle count"] pub type CTL2_HCYCLE_R = crate :: FieldReader < u16 > ; # [doc = "Field `CTL2_HCYCLE` writer - Hold cycle count"] pub type CTL2_HCYCLE_W < 'a , REG , const O : u8 > = crate :: FieldWriter < 'a , REG , 16 , O , u16 > ; impl R { # [doc = "Bits 0:15 - Sample and hold cycle count"] # [inline (always)] pub fn ctl2_shcycle (& self) -> CTL2_SHCYCLE_R { CTL2_SHCYCLE_R :: new ((self . bits & 0xffff) as u16) } # [doc = "Bits 16:31 - Hold cycle count"] # [inline (always)] pub fn ctl2_hcycle (& self) -> CTL2_HCYCLE_R { CTL2_HCYCLE_R :: new (((self . bits >> 16) & 0xffff) as u16) } } impl W { # [doc = "Bits 0:15 - Sample and hold cycle count"] # [inline (always)] # [must_use] pub fn ctl2_shcycle (& mut self) -> CTL2_SHCYCLE_W < CTL2_SPEC , 0 > { CTL2_SHCYCLE_W :: new (self) } # [doc = "Bits 16:31 - Hold cycle count"] # [inline (always)] # [must_use] pub fn ctl2_hcycle (& mut self) -> CTL2_HCYCLE_W < CTL2_SPEC , 16 > { CTL2_HCYCLE_W :: new (self) } # [doc = r" Writes raw bits to the register."] # [doc = r""] # [doc = r" # Safety"] # [doc = r""] # [doc = r" Passing incorrect value can cause undefined behaviour. See reference manual"] # [inline (always)] pub unsafe fn bits (& mut self , bits : u32) -> & mut Self { self . bits = bits ; self } } # [doc = "Control 2\n\nYou can [`read`](crate::generic::Reg::read) this register and get [`ctl2::R`](R).  You can [`reset`](crate::generic::Reg::reset), [`write`](crate::generic::Reg::write), [`write_with_zero`](crate::generic::Reg::write_with_zero) this register using [`ctl2::W`](W). You can also [`modify`](crate::generic::Reg::modify) this register. See [API](https://docs.rs/svd2rust/#read--modify--write-api)."] pub struct CTL2_SPEC ; impl crate :: RegisterSpec for CTL2_SPEC { type Ux = u32 ; } # [doc = "`read()` method returns [`ctl2::R`](R) reader structure"] impl crate :: Readable for CTL2_SPEC { } # [doc = "`write(|w| ..)` method takes [`ctl2::W`](W) writer structure"] impl crate :: Writable for CTL2_SPEC { const ZERO_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; const ONE_TO_MODIFY_FIELDS_BITMAP : Self :: Ux = 0 ; } # [doc = "`reset()` method sets CTL2 to value 0"] impl crate :: Resettable for CTL2_SPEC { const RESET_VALUE : Self :: Ux = 0 ; }